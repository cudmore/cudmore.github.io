<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Robert Cudmore</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2015-03-15T23:04:42-04:00</updated>
 <id></id>
 <author>
   <name>Robert Cudmore</name>
   <email></email>
 </author>

 
 <entry>
   <title>mjpg-streamer on a Raspberry Pi</title>
   <link href="/post/2015/03/15/Installing-mjpg-streamer-on-a-raspberry-pi/"/>
   <updated>2015-03-15T18:01:06-04:00</updated>
   <id>/post/2015/03/15/Installing-mjpg-streamer-on-a-raspberry-pi</id>
   <content type="html">&lt;p&gt;This post covers downloading, installing and running mjp-streamer on a raspberry pi. There are two options for installation and streaming depending on if you stream from (1) a rapsberry pi camera module or (2) a USB camera.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sourcecode for mjpg-streamer&lt;br&gt;
&lt;a href=&quot;http://sourceforge.net/projects/mjpg-streamer/&quot;&gt;http://sourceforge.net/projects/mjpg-streamer/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tutorials  &lt;/p&gt;

&lt;p&gt;In what follows I am following this blog post ...&lt;br&gt;
&lt;a href=&quot;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi&quot;&gt;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post is derived from previous link but explains how to install a USB webcam instead of raspberry pi camera module ...&lt;br&gt;
&lt;a href=&quot;http://jacobsalmela.com/raspberry-pi-webcam-using-mjpg-streamer-over-internet/&quot;&gt;http://jacobsalmela.com/raspberry-pi-webcam-using-mjpg-streamer-over-internet/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install mjpg streamer&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Preliminaries  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get update  
sudo apt-get upgrade  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install dependencies&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install libjpeg8-dev imagemagick libv4l-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;make symbolic link to changed library names. Thanks to Miguel Grinberg for &lt;a href=&quot;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi%5D&quot;&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ln -s /usr/include/linux/videodev2.h /usr/include/linux/videodev.h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;download mjpg-streamer&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http://sourceforge.net/code-snapshots/svn/m/mj/mjpg-streamer/code/mjpg-streamer-code-182.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unzip&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;unzip mjpg-streamer-code-182.zip  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Here is where the installation differs depending on if you are installing (1) a usb camera or (2) the raspberry pi camera module&lt;/h4&gt;

&lt;h3&gt;(1) Raspberry Pi camera module&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;build and install for raspberry pi camera module.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#build with &amp;#39;make&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mjpg-streamer-code-182/mjpg-streamer  
make mjpg_streamer input_file.so output_http.so  
&lt;span class=&quot;c&quot;&gt;#install by copying files&lt;/span&gt;
sudo cp mjpg_streamer /usr/local/bin  
sudo cp output_http.so input_file.so /usr/local/lib/  
sudo cp -R www /usr/local/www      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FOR COMPARISON, HERE IS SAME FOR USB CAMERA. IMPORTANT THING HERE IS &amp;#39;&lt;strong&gt;input_uvc.so&lt;/strong&gt;&amp;#39;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#build with &amp;#39;make&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mjpg-streamer
make mjpg_streamer input_file.so input_uvc.so output_http.so
&lt;span class=&quot;c&quot;&gt;#install by copying&lt;/span&gt;
sudo cp mjpg_streamer /usr/local/bin
sudo cp output_http.so input_file.so input_uvc.so /usr/local/lib/
sudo cp -R www /usr/local/www
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I GUESS YOU COULD JUST FOLLOW &amp;#39;USB CAMERA&amp;#39; AND IT WOULD WORK FOR BOTH&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;start the raspberry pi camera module&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir /tmp/stream  
raspistill --nopreview -w &lt;span class=&quot;m&quot;&gt;640&lt;/span&gt; -h &lt;span class=&quot;m&quot;&gt;480&lt;/span&gt; -q &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; -o /tmp/stream/pic.jpg -tl &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt; -t &lt;span class=&quot;m&quot;&gt;9999999&lt;/span&gt; -th 0:0:0 &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;start mjpg-streamer for raspberry pi camera module. This streams using &amp;#39;&lt;strong&gt;input_file.so&lt;/strong&gt;&amp;#39;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/lib  
mjpg_streamer -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;input_file.so -f /tmp/stream -n pic.jpg&amp;quot;&lt;/span&gt; -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;output_http.so -w /usr/local/www&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;(2) build for usb camera&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Plug in usb camera and verify it is automatically identified using &amp;#39;lsusb&amp;#39;. If it is not you need to get a different camera or go down the rabbit-hole of installing linux drivers (beyond the scope of this post).  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pi@pi50 ~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;lsusb  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 002: ID 0424:9512 Standard Microsystems Corp.  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 003: ID 0424:ec00 Standard Microsystems Corp.  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 004: ID 1a40:0201 Terminus Technology Inc. FE 2.1 7-port Hub  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 005: ID 1415:2000 Nam Tai E&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;E Products Ltd. or OmniVision Technologies, Inc. Sony Playstation Eye  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last entry is my camera, a &amp;#39;Sony Playstation Eye&amp;#39;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the parameters of our USB camera  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;v4l2-ctl --list-formats  

ioctl: VIDIOC_ENUM_FMT  
    Index       : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;  
    Type        : Video Capture  
    Pixel Format: &lt;span class=&quot;s1&quot;&gt;&amp;#39;YUYV&amp;#39;&lt;/span&gt;  
    Name        : YUYV  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The YUYV is very important, I need to pass a -y option to jpg_streamer --input command. If you see MPEG you don&amp;#39;t need this -y switch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here are some other commands to learn about calling conventions. This one told me who to pass -y for YUYV to. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mjpg_streamer --input &lt;span class=&quot;s2&quot;&gt;&amp;quot;input_uvc.so --help&amp;quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# note, i am not showing the output here&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# important line in output is this:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  [-y | --yuv ]..........: enable YUYV format and disable MJPEG mode&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;build and install for usb camera. Critical thing here is &amp;#39;&lt;strong&gt;input_uvc.so&lt;/strong&gt;&amp;#39;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#build with &amp;#39;make&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mjpg-streamer
make mjpg_streamer input_file.so input_uvc.so output_http.so
&lt;span class=&quot;c&quot;&gt;#install by copying&lt;/span&gt;
sudo cp mjpg_streamer /usr/local/bin
sudo cp output_http.so input_file.so input_uvc.so /usr/local/lib/
sudo cp -R www /usr/local/www
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;run mjpg-streamer to stream from usb camera&lt;/p&gt;

&lt;p&gt;My usb camera uses YUYV, thus the &amp;#39;-y&amp;#39;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/usr/local/bin/mjpg_streamer -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/input_uvc.so -y&amp;quot;&lt;/span&gt; -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/output_http.so -w /usr/local/www&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If my camera used MJPEG instead of YUYV, the command is the same without the &amp;#39;-y&amp;#39;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/usr/local/bin/mjpg_streamer -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/input_uvc.so&amp;quot;&lt;/span&gt; -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/output_http.so -w /usr/local/www&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Use OpenCV to acquire video</title>
   <link href="/post/2015/03/07/use-opencv-to-acquire-video/"/>
   <updated>2015-03-07T17:01:06-05:00</updated>
   <id>/post/2015/03/07/use-opencv-to-acquire-video</id>
   <content type="html">&lt;h4&gt;Goals&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use raspberry to record video from USB camera and stream to disk.&lt;/li&gt;
&lt;li&gt;Use python and opencv&lt;/li&gt;
&lt;li&gt;will save either as a sequence of .tif or as an uncompressed videofile&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Install opencv&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get update&lt;br&gt;
sudo apt-get upgrade&lt;br&gt;
sudo apt-get install libopencv-dev python-opencv&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Remember that I have conda install of python in &amp;#39;/home/pi/miniconda/bin/python&amp;#39;.&lt;/li&gt;
&lt;li&gt;I need to use &amp;#39;/usr/bin/python&amp;#39; instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Check opencv install&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ /usr/bin/python  
Python 2.7.3 (default, Mar 18 2014, 05:13:23) 
[GCC 4.6.3] on linux2  
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.  
&amp;gt;&amp;gt;&amp;gt; import cv2  
&amp;gt;&amp;gt;&amp;gt; cv2.__version__  
&amp;#39;2.4.1&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Install USB thumb drive + usb camera&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;after pluggin in usb drive + usb camera&lt;/p&gt;

&lt;p&gt;pi@pi40 ~ $ lsusb&lt;br&gt;
Bus 001 Device 002: ID 0424:9512 Standard Microsystems Corp. 
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub&lt;br&gt;
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. 
Bus 001 Device 005: ID 1415:2000 Nam Tai E&amp;amp;E Products Ltd. or OmniVision Technologies, Inc. Sony Playstation Eye&lt;br&gt;
Bus 001 Device 004: ID 13fe:4100 Kingston Technology Company Inc.  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Got some python/opencv code to acquire&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Acquires individual .tif files in a loop&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;To do&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Check the frame rate by recording a clock&lt;/li&gt;
&lt;li&gt;Add in template code for stop/start, start with keyboard and then move to GPIO&lt;/li&gt;
&lt;li&gt;Get the DC60 STK1160 video to usb dongle working&lt;/li&gt;
&lt;li&gt;This website says that it may just auto detect in newer linux kernels?
http://linuxtv.org/wiki/index.php/Stk1160#Making&lt;em&gt;it&lt;/em&gt;Work&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Here is the code&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#/usr/bin/python

import numpy as np
import cv2

#initialize camera
cap = cv2.VideoCapture(0)
if cap is None:
    print &amp;#39;Warning: unable to access camera&amp;#39;

#stopPin = 7 # listen for a change on this pin to stop

# number of frames to acquire
numFrames = 30
currFrame = 0

#outfilebase = &amp;#39;images/image&amp;#39; #append number + .tif

print &amp;#39;starting capture of &amp;#39; + str(numFrames) + &amp;#39; frames.&amp;#39;
print &amp;#39;press ctrl-c to stop ... eventually we will stop on a TTL&amp;#39;
while(cap.isOpened()):
    try:
        ret, frame = cap.read()
        if ret==True:
            #flip frame
            #frame = cv2.flip(frame,0)

            #print frame.shape

            # write the flipped frame
            try:
                #out.write(frame)
                #cv2.SaveImage(&amp;#39;file&amp;#39; + str(currFrame) + &amp;#39;.tif&amp;#39;, frame)
                cv2.imwrite(&amp;#39;images/image&amp;#39; + str(currFrame) + &amp;#39;.tif&amp;#39;, frame)
            except:
                print &amp;#39;Error in out.write() OR user hit ctrl-c&amp;#39;
                break

            currFrame += 1
            #if (currFrame &amp;gt; numFrames):
            #    print &amp;#39;finished &amp;#39; + str(numFrames) + &amp;#39; frames.&amp;#39;
            #    break

        else:
            break

    except KeyboardInterrupt:
        print &amp;#39;user hit ctrl-c&amp;#39;
        print &amp;#39;frames=&amp;#39; + str(currFrame)
        break

# Release camera
cap.release()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Plotting with bokeh on the Raspberry Pi</title>
   <link href="/post/2015/03/05/bokeh-on-the-raspberry-pi/"/>
   <updated>2015-03-05T17:01:06-05:00</updated>
   <id>/post/2015/03/05/bokeh-on-the-raspberry-pi</id>
   <content type="html">&lt;p&gt;Goal is to get plotting with bokeh on the Raspberry Pi.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install continuum anaconda python distribution&lt;/li&gt;
&lt;li&gt;Install bokeh plotting and get a plot server running&lt;/li&gt;
&lt;li&gt;be able to run bokeh examples&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install miniconda&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ wget http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-armv6l.sh
pi@pi40 ~ $ bash Miniconda-3.5.5-Linux-armv6l.sh 

Miniconda will now be installed into this location:
/home/pi/miniconda

  - Press ENTER to confirm the location
  - Press CTRL-C to abort the installation
  - Or specify an different location below

[/home/pi/miniconda] &amp;gt;&amp;gt;&amp;gt; 
PREFIX=/home/pi/miniconda
installing: python-2.7.7-0 ...
installing: openssl-1.0.1h-0 ...
installing: pycosat-0.6.1-py27_0 ...
installing: pyyaml-3.11-py27_0 ...
installing: requests-2.3.0-py27_0 ...
installing: yaml-0.1.4-0 ...
installing: conda-3.5.5-py27_0 ...
Python 2.7.7 :: Continuum Analytics, Inc.
creating default environment...
installation finished.
Do you wish the installer to prepend the Miniconda install location
to PATH in your /home/pi/.bashrc ? [yes|no]
[no] &amp;gt;&amp;gt;&amp;gt; yes

Prepending PATH=/home/pi/miniconda/bin to PATH in /home/pi/.bashrc
A backup will be made to: /home/pi/.bashrc-miniconda.bak


For this change to become active, you have to open a new terminal.

Thank you for installing Miniconda!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Make sure numpy and pandas is correct&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install numpy --upgrade&lt;br&gt;
pip install pandas --upgrade  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Install bokeh&lt;/h3&gt;

&lt;p&gt;In general &amp;#39;conda install bokeh&amp;#39; does not work on Pi, bokeh is not in repo?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install bokeh  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a list of required packages, see http://bokeh.pydata.org/en/latest/tutorial/quick_install.html  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;from: http://bokeh.pydata.org/en/latest/tutorial/quick_install.html
Ideally, you should have the following libraries installed:

NumPy
Flask
Redis
Requests
gevent
gevent-websocket
Pandas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Currently installed with pip&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ pip freeze
Flask==0.10.1
Flask-Markdown==0.3
Flask-Misaka==0.3.0
Flask-SocketIO==0.5.0
Jinja2==2.7.3
Markdown==2.6
MarkupSafe==0.23
PyYAML==3.11
Pygments==2.0.2
RPi.GPIO==0.5.11
Werkzeug==0.10.1
backports.ssl-match-hostname==3.4.0.2
bokeh==0.8.1
colorama==0.3.3
conda==3.5.5
gevent==1.0.1
gevent-socketio==0.3.6
gevent-websocket==0.9.3
greenlet==0.4.5
ipython==2.1.0
itsdangerous==0.24
misaka==1.0.2
nose==1.3.0
numpy==1.9.2
pandas==0.15.2
psutil==2.2.1
pycosat==0.6.1
pystache==0.5.4
python-dateutil==2.4.1
pytz==2014.10
pyzmq==14.5.0
requests==2.3.0
six==1.9.0
tornado==4.1
websocket==0.2.1
wsgiref==0.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Grab some example plots from bokeh github&lt;/h3&gt;

&lt;p&gt;The bokeh example plots are at:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;https://github.com/bokeh/bokeh/tree/master/examples/plotting/server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Run the bokeh-server&lt;/h3&gt;

&lt;p&gt;Remember, this make temporary files in directory you run it in.&lt;/p&gt;

&lt;p&gt;--ip 0.0.0.0 will redirect the server to your external IP, in my case http://192.168.1.40:5006  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;bokeh-server --backend=memory --ip 0.0.0.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~/bokeh_examples $ bokeh-server --backend=memory --ip 0.0.0.0
No module named scipy

    Bokeh Server Configuration
    ==========================
    python version : 2.7.8
    bokeh version  : 0.8.1
    listening      : 0.0.0.0:5006
    backend        : memory
    python options : debug:OFF, verbose:OFF, filter-logs:OFF, multi-user:OFF
    js options     : splitjs:OFF, debugjs:OFF

/home/pi/miniconda/lib/python2.7/site-packages/bokeh/server/blaze/__init__.py:19: UserWarning: could not import multiuser blaze server No module named blaze.  This is fine if you do not intend to use blaze capabilities in the bokeh server
  warnings.warn(msg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Example plots I have working&lt;/h3&gt;

&lt;p&gt;line_animate.py&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# The plot server must be running
# Go to http://localhost:5006/bokeh to view this plot

import time

import numpy as np

from bokeh.plotting import *

N = 80

x = np.linspace(0, 4*np.pi, N)
y = np.sin(x)

output_server(&amp;quot;line_animate&amp;quot;)

p = figure()

p.line(x, y, color=&amp;quot;#3333ee&amp;quot;, name=&amp;quot;sin&amp;quot;)
p.line([0,4*np.pi], [-1, 1], color=&amp;quot;#ee3333&amp;quot;)

show(p)

renderer = p.select(dict(name=&amp;quot;sin&amp;quot;))
ds = renderer[0].data_source

while True:
    for i in np.hstack((np.linspace(1, -1, 100), np.linspace(-1, 1, 100))):
        ds.data[&amp;quot;y&amp;quot;] = y * i
        cursession().store_objects(ds)
        time.sleep(0.05)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Now use Flask + bokeh to generate a single html page (no bokeh-server)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;eventual goal here is to have Flask server inject new data (via socketio) into html page with bokeh plot by modifying x/y data with javascript (on the client)&lt;/li&gt;
&lt;li&gt;simple example that works: https://github.com/bokeh/bokeh/tree/master/examples/embed/simple&lt;br&gt;&lt;/li&gt;
&lt;li&gt;more complex: https://github.com/bokeh/bokeh/tree/master/examples/embed/spectrogram&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;http://bokeh.pydata.org/en/latest/index.html&lt;br&gt;&lt;/li&gt;
&lt;li&gt;http://docs.continuum.io/anaconda/install.html&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Python calling bash to get drive space remaining</title>
   <link href="/2014/12/24/Python-calling-bash-to-get-drive-space-remaining/"/>
   <updated>2014-12-24T00:00:00-05:00</updated>
   <id>/2014/12/24/Python-calling-bash-to-get-drive-space-remaining</id>
   <content type="html">&lt;p&gt;I need to have some Python code tell me how much drive space is left. Here is what I came up with.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import subprocess as sub
&amp;gt;&amp;gt;&amp;gt; checkPath = &amp;#39;~/video&amp;#39;
&amp;gt;&amp;gt;&amp;gt; cmd = &amp;quot;df &amp;quot; + checkPath + &amp;quot; | awk &amp;#39;{ print $5 }&amp;#39; | tail -n 1&amp;quot;
&amp;gt;&amp;gt;&amp;gt; p = sub.Popen(cmd, stdout=sub.PIPE,stderr=sub.PIPE, shell=True)
&amp;gt;&amp;gt;&amp;gt; (out, err) = p.communicate()
&amp;gt;&amp;gt;&amp;gt; out
&amp;#39;31%\n&amp;#39;
&amp;gt;&amp;gt;&amp;gt; out.rstrip() #rstrip &amp;#39;chomps&amp;#39; off newline
&amp;#39;31%&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Monitoring mice in their home cage</title>
   <link href="/post/2014/02/14/Monitoring%20mice%20in%20their%20home%20cage/"/>
   <updated>2014-02-14T17:01:06-05:00</updated>
   <id>/post/2014/02/14/Monitoring mice in their home cage</id>
   <content type="html">&lt;p&gt;[Aug 4, 2014, updated]
[March 2015, moved to cudmore.github.io]&lt;/p&gt;

&lt;h2&gt;Goal&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;videotape mice in their home cage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Parts&lt;/h3&gt;

&lt;h4&gt;Computer&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Raspberry Pi, Model B 512MB RAM, &lt;a href=&quot;http://www.adafruit.com/products/998&quot;&gt;Adafruit 998&lt;/a&gt; target=&amp;quot;&lt;em&gt;blank&amp;quot;&amp;gt;Adafruit 998&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 GB SD Card, &amp;lt;a href=&amp;quot;http://www.adafruit.com/products/102&amp;quot; target=&amp;quot;&lt;/em&gt;blank&amp;quot;&amp;gt;Adafruit 102&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;USB 2 Wifi Dongle (802.11b/g/n), &lt;a href=&quot;http://www.adafruit.com/products/814&quot; target=&quot;_blank&quot;&gt;Adafruit, 814&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;USB 2 Powered Hub, 5V 2A, &lt;a href=&quot;http://www.adafruit.com/products/961&quot; target=&quot;_blank&quot;&gt;Adafruit, 961&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;USB 2 hard-drive, Old laptop drive with a SATA to USB 2 connector&lt;/li&gt;
&lt;li&gt;5V 1A AC to DC converter, &lt;a href=&quot;http://www.adafruit.com/products/501&quot; target=&quot;_blank&quot;&gt;Adafruit, 501&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Video&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi NoIR camera, &lt;a href=&quot;http://www.adafruit.com/products/1567&quot; target=&quot;_blank&quot;&gt;Adafruit, 1567&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;12&amp;quot; flex cable for Raspberry Pi NoIR Camera, &lt;a href=&quot;http://www.adafruit.com/products/1648&quot; target=&quot;_blank&quot;&gt;Adafruit, 1648&lt;/a&gt; (24&amp;quot;, &lt;a href=&quot;https://www.adafruit.com/products/1731&quot; target=&quot;_blank&quot;&gt;Adafruit 1731&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;4x Right-angle 1/2&amp;quot; post clamps, &lt;a href=&quot;http://search.newport.com/?q=*&amp;amp;x2=sku&amp;amp;q2=CA-1&quot; target=&quot;_blank&quot;&gt;Newport CA-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mini Ball Head, &lt;a href=&quot;http://www.bhphotovideo.com/c/product/221096-REG/Giottos_MH1004_320_MH_1004_Mini_Ball.html&quot; target=&quot;_blank&quot;&gt;B&amp;amp;H Giottos MH1004&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1/2&amp;quot; hollow aluminum tubes, these are cheap and easily cut with hack-saw, &lt;a href=&quot;http://www.homedepot.com/p/Allied-Tube-Conduit-1-2-in-x-10-ft-Electric-Metallic-Tube-Conduit-101543/100400405&quot; target=&quot;_blank&quot;&gt;Home Depot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Lights&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;2x LED Driver, 12VDC 700 MA, &lt;a href=&quot;https://www.superbrightleds.com/moreinfo/led-drivers/700ma-constant-current-led-driver/1323/3045/&quot; target=&quot;_blank&quot;&gt;SuperBrightLeds, CCD-700&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4x LED PCB,  &lt;a href=&quot;http://www.superbrightleds.com/moreinfo/bare-circuit-boards/universal-4-led-miniature-wedge-base-pcb-mled-pcb/403/1387/&quot; target=&quot;_blank&quot;&gt;SuperBrightleds, MLED-PCB, 84778101387&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x Mosfet PCB, &lt;a href=&quot;https://www.sparkfun.com/products/10256&quot; target=&quot;_blank&quot;&gt;Sparkfun, COM-10256&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LED - Super Bright White (25 pack)&lt;/li&gt;
&lt;li&gt;LED - Infrared 850nm (25 pack), &lt;a href=&quot;https://www.sparkfun.com/products/9854&quot; target=&quot;_blank&quot;&gt;Sparkfun COM-09854&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LED - Infrared 950nm (25 pack), &lt;a href=&quot;https://www.sparkfun.com/products/10557&quot; target=&quot;_blank&quot;&gt;Sparkfun COM-10557&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x LED Light Bar - White (SMD), &lt;a href=&quot;https://www.sparkfun.com/products/12014&quot; target=&quot;_blank&quot;&gt;Sparkfun, COM-12014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Light Holders,&lt;b&gt; &lt;/b&gt;25 lb circular magnets, 3 foot threaded rods, screws, washers (Ace Hardware)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Running Wheels&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Empty running wheels from &lt;a href=&quot;http://www.med-associates.com/product/low-profile-wireless-running-wheel-for-mouse/&quot; target=&quot;_blank&quot;&gt;Med Associates&lt;/a&gt; (find cheaper solution)&lt;/li&gt;
&lt;li&gt;2 Hall Effect sensors per wheel (Optek/TT O090U), &lt;a href=&quot;http://www.mouser.com/ProductDetail/Optek-TT-electronics/OH090U/?qs=MYMjFsmMg9Zxhz344sS0jg==&quot; target=&quot;_blank&quot;&gt;Mouser 828-OH090U&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Miscellaneous Sensors&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Visible light sensor (Vishay, TEPT5600), &lt;a href=&quot;http://www.mouser.com/ProductDetail/Vishay/TEPT5600/?qs=%2fha2pyFadujUHPassviAP51fh4B6FFdxq%2fQn0JoB63RFxPBe7%2ffCXA%3d%3d&quot; target=&quot;_blank&quot;&gt;Mouser 782-TEPT5600&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IR sensor (Vishay BPW83), &lt;a href=&quot;http://www.mouser.com/ProductDetail/Vishay/BPW83/?qs=%2fha2pyFaduiEcAuMy5rpt15ObB2haiIvhq3aASHM7R0%3d&quot; target=&quot;_blank&quot;&gt;Mouser 782-BPW83&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Temperature and Humidity Sensor (AM2302 wired DHT22), &lt;a href=&quot;http://www.adafruit.com/products/393&quot; target=&quot;_blank&quot;&gt;Adafruit 393&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Acquisition Software (&lt;/strong&gt;Python scripts running in Pi)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Script 1:
&lt;ul&gt;
    &lt;li&gt;Acquires sequential 5 minute videos and save each to a timestamped .h264 file.&lt;/li&gt;
&lt;/ul&gt;
Script 2:
&lt;ul&gt;
    &lt;li&gt;Turns IR and White lights on and off, uses time-of-day from Raspberry Linux.&lt;/li&gt;
    &lt;li&gt;Reads from IR and visible light sensors to check light levels and sends an email if either IR or white lights burn out.&lt;/li&gt;
    &lt;li&gt;Reads temperature and humidity.&lt;/li&gt;
    &lt;li&gt;Reads wheel turn events using low level GPIO callbacks to get more accurate time.&lt;/li&gt;
    &lt;li&gt;Logs all of this to text file locally on Raspberry.&lt;/li&gt;
    &lt;li&gt;Pushes all of this to online web server so I can check if the mice have been running. &lt;del&gt;Remote webserver has a PHP script to accept and save name/value pairs of data&lt;/del&gt;. Now using mySQL on external web server.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Software Analysis&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;Python/OpenCV motion detection using a modified version of &lt;a href=&quot;http://derek.simkowiak.net/motion-tracking-with-python/&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; (Thanks to Derek Simkowiak). Motion detection does not run on Pi, runs offline on desktop/laptop (OS X)&lt;/li&gt;
    &lt;li&gt;In future, write in C++/OpenCV using &lt;a href=&quot;http://sundararajana.blogspot.com/2007/05/motion-detection-using-opencv.html&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;&lt;a title=&quot;Setting up Python, OpenCV and ffmpeg in OSX&quot; href=&quot;http://www.robertcudmore.org/blog/?p=183&quot; target=&quot;_blank&quot;&gt;How to install Python/OpenCV/ffmpeg on OSX&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Another project to monitor a hamster in their cage, &lt;a href=&quot;http://www.raspberrypi.org/learning/hamster-party-cam/&quot;&gt;the hamster party-cam&lt;/a&gt; (from the Raspberry people).&lt;/li&gt;&lt;/p&gt;

&lt;h1&gt;&lt;/ul&gt;&lt;/h1&gt;

&lt;h3&gt;Wish List&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Sensors&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;del&gt;Temperature and Humidity sensor, &lt;a href=&quot;http://www.adafruit.com/products/393&quot; target=&quot;_blank&quot;&gt;Adafruit, 393&lt;/a&gt;, $15&lt;/del&gt;&lt;/li&gt;
    &lt;li&gt;&lt;del&gt;Upgrade temperature/humidity to something like, &lt;a href=&quot;http://www.adafruit.com/products/1293&quot; target=&quot;_blank&quot;&gt;Adafruit 1293&lt;/a&gt;, $30, no tutorials 2/14/14&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Camera Holder&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;del&gt;Right-angle 1/2&amp;quot; post clamps, &lt;a href=&quot;http://www.thorlabs.com/thorProduct.cfm?partNumber=RA90&quot; target=&quot;_blank&quot;&gt;Thor Labs, RA90&lt;/a&gt; (google image search for &amp;#39;Right Angle Clamp rod&amp;#39;). Will order Newport right-angle post clamp, Newport &lt;a href=&quot;http://search.newport.com/?q=*&amp;amp;x2=sku&amp;amp;q2=CA-1&quot; target=&quot;_blank&quot;&gt;CA-1&lt;/a&gt;. In general, it seems that any kind of post system with clamps, junctions, and T&amp;#39;s triples in price as soon as the post/rod diameter goes below 1/2&amp;quot;. Because I need many of these post clamps, 3-4 for camera and 3-4 for lights) I will stick with the 1/2&amp;quot; variety. My choice to go with Newport is based on &lt;a href=&quot;http://mousevr.blogspot.com/2011_09_01_archive.html&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; comment.&lt;/del&gt;&lt;/li&gt;
    &lt;li&gt;&lt;del&gt;1/2&amp;quot; aluminum OR wood tubes/dowels&lt;/del&gt;&lt;/li&gt;
    &lt;li&gt;&lt;del&gt;12&amp;quot; flex cable for Raspberry Pi NoIR Camera, &lt;a href=&quot;http://www.adafruit.com/products/1648&quot; target=&quot;_blank&quot;&gt;Adafruit, 1648&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;&lt;/p&gt;

&lt;h1&gt;&lt;/ul&gt;&lt;/h1&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;Temp/Humidity Sensor (DHT22) spits out readings once per second (fine) and does it fast (not fine). On Raspberry Pi this requires some C code to read &amp;#39;bit-banged&amp;#39; sensor output. See &lt;a href=&quot;http://learn.adafruit.com/dht-humidity-sensing-on-raspberry-pi-with-gdocs-logging&quot; target=&quot;_blank&quot;&gt;Adafruit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.adafruit.com/products/1293&quot; target=&quot;_blank&quot;&gt;AM2315&lt;/a&gt; is a more accurate temperature/humidity sensor, and data comes in via I2C. This particular sensor has a fixed address.&lt;/p&gt;

&lt;p&gt;The Pi NoIR camera is just the standard Pi camera with the IR filter removed. Right now there are no detailed specs on the nm sensitivity of the NoIR camera, the IR filter or the original camera for that matter. According to the &lt;a href=&quot;http://elinux.org/Rpi_Camera_Module&quot; target=&quot;_blank&quot;&gt;Embedded Linux Wiki&lt;/a&gt;, the Pi NoIR camera has a CMOS &lt;a href=&quot;http://www.ovt.com/products/sensor.php?id=66&quot; target=&quot;_blank&quot;&gt;Omnivision 5647 CMOS&lt;/a&gt; chip. Also see the pdf &lt;a href=&quot;http://www.ovt.com/download_document.php?type=sensor&amp;amp;sensorid=66&quot; target=&quot;_blank&quot;&gt;spec/ad sheet&lt;/a&gt;. &lt;a href=&quot;http://www.aphesa.com&quot; target=&quot;_blank&quot;&gt;Aphesa&lt;/a&gt; has some pretty in depth discussion of the &lt;a href=&quot;http://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=3&amp;amp;ved=0CDoQFjAC&amp;amp;url=http%3A%2F%2Fwww.aphesa.com%2Fdownloads%2Fdownload2.php%3Fid%3D1&amp;amp;ei=6DX-UryPKMXb0wGq4YHgBg&amp;amp;usg=AFQjCNG9S8Vix59mZKa5fYeZ-mvSw0ZaOQ&amp;amp;sig2=eRzJXiMlOerKKYQ4RmtkKA&amp;amp;bvm=bv.61190604,d.dmQ&quot; target=&quot;_blank&quot;&gt;spectral response properties of silicon image sensors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I tried 950nm LEDs and got a pretty grainy video, I switched to 850 nm LEDs and the image is brighter and less grainy (as expected). In both these cases, the camera is about 20&amp;quot; from subject and IR  lights are off to the left and right, 4 LEDs on the left and 4 LEDs on the right. See &lt;a href=&quot;http://www.raspberrypi.org/forum/viewtopic.php?f=43&amp;amp;t=60103&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; discussion and &lt;a href=&quot;http://www.raspberrypi.org/phpBB3/viewtopic.php?f=43&amp;amp;t=48787&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; for a guess at the spectral sensitivity.&lt;/p&gt;

&lt;del&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;-Try -night switch for video with IR LEDs.&lt;/span&gt;&lt;/del&gt;

&lt;p&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt;-&lt;/span&gt;&lt;a style=&quot;line-height: 1.714285714; font-size: 1rem;&quot; href=&quot;http://www.lukasz-skalski.com/category/software/&quot; target=&quot;_blank&quot;&gt;Raspberry Control&lt;/a&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt;, a general purpose Android based Raspberry Pi Controller.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt; Camera board has 2mm screw holes, see &lt;/span&gt;&lt;a style=&quot;line-height: 1.714285714; font-size: 1rem;&quot; href=&quot;http://www.scribd.com/doc/142718448/Raspberry-Pi-Camera-Mechanical-Data&quot; target=&quot;_blank&quot;&gt;Gert&amp;#39;s drawings&lt;/a&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 

</feed>
