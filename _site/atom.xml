<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Robert Cudmore</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2015-04-27T09:38:10-04:00</updated>
 <id></id>
 <author>
   <name>Robert Cudmore</name>
   <email></email>
 </author>

 
 <entry>
   <title>Install OSX</title>
   <link href="/post/2015/04/19/Install-OSX/"/>
   <updated>2015-04-19T18:01:06-04:00</updated>
   <id>/post/2015/04/19/Install-OSX</id>
   <content type="html">&lt;p&gt;Upgraded home desktop with fresh install of OSX 10.9.5 Mavericks.&lt;br&gt;
 - Motherboard is &lt;a href=&quot;http://www.gigabyte.com/products/product-page.aspx?pid=4279#ov&quot;&gt;GA-Z77X-UP5-TH&lt;/a&gt;&lt;br&gt;
 - BIOS is &lt;a href=&quot;http://www.gigabyte.com/products/product-page.aspx?pid=4279#bios&quot;&gt;F12&lt;/a&gt;&lt;br&gt;
 - Followed Tonymac post by &lt;a href=&quot;http://www.tonymacx86.com/golden-builds/73112-updated-storks-thunderbolt-build-i5-3570k-ga-z77x-up5-th-gtx-650-ti-mavericks.html&quot;&gt;Stork&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Analysis&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.wavemetrics.com/support/versions.htm&quot;&gt;Igor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://fiji.sc/Downloads&quot;&gt;Fiji&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Using &amp;#39;Fiji Life-Line version, 2014 November 25&amp;#39;. &lt;/li&gt;
&lt;li&gt;Fiji will not run until setting: Security &amp;amp; Privacy -&amp;gt; Allow apps downloaded from: Anywhere&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Installing Java SE 6&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Development&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.macports.org/install.php&quot;&gt;Macports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;XCode command line tools&lt;br&gt;
&lt;code&gt;
xcode-select --install
&lt;/code&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://continuum.io/downloads&quot;&gt;Anaconda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jekyllrb.com/docs/installation/&quot;&gt;Jekyll&lt;/a&gt;&lt;br&gt;
&lt;code&gt;
gem install jekyll
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Synchronization&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mac.github.com&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cis.upenn.edu/%7Ebcpierce/unison/&quot;&gt;Unison&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Utility&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.barebones.com/products/textwrangler/download.html&quot;&gt;TextWrangler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bjango.com/mac/istatmenus/&quot;&gt;iStat Menus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://unarchiver.c3.cx/unarchiver&quot;&gt;Unarchiver&lt;/a&gt; - Handles .xz, .exe&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Word processing and layout&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;iWork&lt;/li&gt;
&lt;li&gt;Adobe Illustrator CS6&lt;/li&gt;
&lt;li&gt;Adobe reader (for digital signatures)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Web&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Stock install of Safari&lt;/li&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Media&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.videolan.org&quot;&gt;VLC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Torrent&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.utorrent.com/downloads/mac&quot;&gt;mu-torrent&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Remote desktop connection to Raspberry Pi&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.realvnc.com/download/viewer/&quot;&gt;realVNC viewer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;myjhu VPN (This is the part that is always FUCKING IMPOSSIBLE)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;[FUCK IT, IT IS NOT MY JOB TO DOCUMENT SOFTWARE THAT DOES NOT WORK AND IS MANAGED BY INCOMPETENT AND OVERPAID TWITS]&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;del&gt;- Start by going &lt;a href=&quot;https://jhpulse.johnshopkins.edu.&quot;&gt;here&lt;/a&gt;&lt;/del&gt;&lt;br&gt;
 &lt;del&gt;- &lt;a href=&quot;https://jhpulse.johnshopkins.edu&quot;&gt;https://jhpulse.johnshopkins.edu&lt;/a&gt;.&lt;/del&gt;  &lt;/p&gt;

&lt;p&gt;&lt;del&gt;- Forces install of Java 8u45&lt;/del&gt;  &lt;/p&gt;

&lt;p&gt;&lt;del&gt;- &lt;a href=&quot;https://www.java.com/en/download/mac_download.jsp&quot;&gt;https://www.java.com/en/download/mac_download.jsp&lt;/a&gt;&lt;/del&gt;&lt;br&gt;
&lt;del&gt;- jre-8u45-macosx-x64.dmg&lt;/del&gt;  &lt;/p&gt;

&lt;p&gt;&lt;del&gt;- Install Junos Pulse (twice)&lt;/del&gt;&lt;br&gt;
 &lt;del&gt;- Requires manual setting of Safari security&lt;/del&gt;&lt;br&gt;
 - Complete bullshit amateur hack job&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/i-can-see-you-black-flag.jpg&quot; alt=&quot;My helpful screenshot&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Lab Protocols</title>
   <link href="/post/2015/03/27/lab-protocols/"/>
   <updated>2015-03-27T18:01:06-04:00</updated>
   <id>/post/2015/03/27/lab-protocols</id>
   <content type="html">&lt;h4&gt;Dental cement, C&amp;amp;B-Metabond Adhesive Cement, Parkell Inc&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;S396 (3g) Radiopaque Tooth-Shade L-Powder&lt;/li&gt;
&lt;li&gt;S398 (10ml) C&amp;amp;B-Metabond Quick Base (blue)&lt;/li&gt;
&lt;li&gt;S371 (0.7ml) Catalyst Gold Label&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4 drops Quick Base + 1 drop Catalyst + 2 scoops Powder&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fresh install of Raspian</title>
   <link href="/post/2015/03/21/fresh-install-raspian/"/>
   <updated>2015-03-21T18:01:06-04:00</updated>
   <id>/post/2015/03/21/fresh-install-raspian</id>
   <content type="html">&lt;p&gt;This is the procedure I follow to install a fresh raspbian system on a Raspberry Pi.&lt;/p&gt;

&lt;h3&gt;Preliminaries&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo raspi-config # configure pi with text menu

sudo apt-get update # update database

sudo apt-get upgrade # update userspace

sudo rpi-update # update firmware (requires reboot)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Apple-File-Protocol (afp)&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install netatalk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Unison file synchronization&lt;/h3&gt;

&lt;p&gt;See my post &lt;a href=&quot;http://www.robertcudmore.org/blog/?p=168&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install unison
#see link to set up auto authentication with rsa keys
unison #run once to make /home/pi/.unison
pico /home/pi/.unison/sites.prf    

# This is contents of /home/pi/.unison/sites.prf
# Unison preferences file
root = /home/pi/Sites
root = ssh://robertcu@robertcudmore.org/raspberry/Sites

ignore = Name *.tif
ignore = Name .AppleDouble
ignore = Name .DS_Store
ignore = Name *.DS_Store
ignore = Name *.shtml
ignore = Name *.htaccess

# Be fast even on Windows
#fastcheck = yes

servercmd=/home1/robertcu/unison
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Startup mailer&lt;/h3&gt;

&lt;p&gt;See my post &lt;a href=&quot;http://www.robertcudmore.org/blog/?p=60&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Use gmail &amp;#39;&lt;a href=&quot;mailto:cudmore.raspberry@gmail.com&quot;&gt;cudmore.raspberry@gmail.com&lt;/a&gt;&amp;#39; to send  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; wget http://cudmore.github.io/downloads/startup_mailer.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;What is my ip&lt;/h3&gt;

&lt;p&gt;Download whatismyip.py, run it and it will tell you your ip&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;WOOPS, NOT THIS ... wget http://cudmore.github.io/downloads/startup_mailer.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;python&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install python-dev  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;pip&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install python-pip  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Flask&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Flask tutorial &lt;a href=&quot;http://mattrichardson.com/Raspberry-Pi-Flask/&quot;&gt;here&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;sudo pip install flask  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;socketio for Flask&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://flask-socketio.readthedocs.org/en/latest/&quot;&gt;socketio website&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent&quot;&gt;socketio tutorial&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;sudo pip install flask-socketio  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;pandas (this takes awhile)&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install python-pandas  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;subversion&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install subversion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;mjpg-streamer&lt;/h3&gt;

&lt;p&gt;See my post &lt;a href=&quot;http://cudmore.github.io/post/2015/03/15/Installing-mjpg-streamer-on-a-raspberry-pi/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get -y install libjpeg8-dev imagemagick libv4l-dev  
sudo ln -s /usr/include/linux/videodev2.h /usr/include/linux/videodev.h  
wget http://sourceforge.net/code-snapshots/svn/m/mj/mjpg-streamer/code/mjpg-streamer-code-182.zip  
unzip mjpg-streamer-code-182.zip  
cd mjpg-streamer-code-182/mjpg-streamer  
make mjpg_streamer input_file.so input_uvc.so output_http.so  
sudo cp mjpg_streamer /usr/local/bin  
sudo cp output_http.so input_file.so input_uvc.so /usr/local/lib/  
sudo cp -R www /usr/local/www  

sudo apt-get install v4l-utils #this is to detect parameters of USB camera  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note, make &amp;#39;input_uvc.so&amp;#39; is for usb cam and &amp;#39;input_file&amp;#39; is for raspberry CSI camera  &lt;/p&gt;

&lt;p&gt;If wget does not find mjpg-streamer, download it here  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;wget http://cudmore.github.io/downloads/mjpg-streamer-code-182.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;opencv&lt;/h3&gt;

&lt;p&gt;See my post on open cv &lt;a href=&quot;http://cudmore.github.io/post/2015/03/07/use-opencv-to-acquire-video/&quot;&gt;here&lt;/a&gt;  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install libopencv-dev python-opencv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;PIL&lt;/h3&gt;

&lt;p&gt;Not sure if there is apt-get install python-pil ???&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo pip install pil
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Upgrade numpy (takes a long time)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;required for pandas and bokeh&lt;/p&gt;

&lt;p&gt;sudo pip install numpy --upgrade  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install pandas&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo apt-get install python-pandas  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Install bokeh&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To do, get an example running again  &lt;/p&gt;

&lt;p&gt;sudo pip install bokeh&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;!!! Stop Here !!!&lt;/h1&gt;

&lt;h3&gt;Client side socket.io javascript&lt;/h3&gt;

&lt;p&gt;Client side needs socketio javascript: &lt;a href=&quot;http://socket.io&quot;&gt;http://socket.io&lt;/a&gt;&lt;br&gt;
Put this in your Flask project /static/js/&lt;br&gt;
Something like /home/pi/Sites/iosserver/static/js/socket.io.min.js  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;wget &lt;a href=&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.5/socket.io.min.js&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.5/socket.io.min.js&lt;/a&gt;&lt;br&gt;
cp socket.io.min.js Sites/iosserver/static/js/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Client side jquery&lt;/h3&gt;

&lt;p&gt;documentation at: &lt;a href=&quot;http://jquery.com/download/&quot;&gt;http://jquery.com/download/&lt;/a&gt;  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;wget wget &lt;a href=&quot;http://code.jquery.com/jquery-1.11.2.min.js&quot;&gt;http://code.jquery.com/jquery-1.11.2.min.js&lt;/a&gt;&lt;br&gt;
cp jquery-1.11.2.min.js Sites/iosserver/static/js/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;miniconda&lt;/h3&gt;

&lt;p&gt;anaconda install tutorial &lt;a href=&quot;http://docs.continuum.io/anaconda/install.html&quot;&gt;http://docs.continuum.io/anaconda/install.html&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;wget &lt;a href=&quot;http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-armv6l.sh&quot;&gt;http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-armv6l.sh&lt;/a&gt;
bash Miniconda-3.5.5-Linux-armv6l.sh&lt;/p&gt;

&lt;p&gt;conda update conda
conda update anaconda&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;bokeh&lt;/h3&gt;

&lt;p&gt;bokeh quickstart: &lt;a href=&quot;http://bokeh.pydata.org/en/latest/docs/quickstart.html&quot;&gt;http://bokeh.pydata.org/en/latest/docs/quickstart.html&lt;/a&gt;
make sure dependencies are installed: NumPy, Pandas, and Redis&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install bokeh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Streaming from a webcam or camera module using mjpg streamer&lt;/h3&gt;

&lt;p&gt;My home usb video camera shows up as&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi50 ~/Sites/iosserver $ lsusb
Bus 001 Device 002: ID 0424:9512 Standard Microsystems Corp. 
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. 
Bus 001 Device 004: ID 1a40:0201 Terminus Technology Inc. FE 2.1 7-port Hub
Bus 001 Device 005: ID 1415:2000 Nam Tai E&amp;amp;E Products Ltd. or OmniVision Technologies, Inc. Sony Playstation Eye
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Source code for mjpg streamer&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sourceforge.net/projects/mjpg-streamer/&quot;&gt;http://sourceforge.net/projects/mjpg-streamer/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tutorials&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jacobsalmela.com/raspberry-pi-webcam-using-mjpg-streamer-over-internet/&quot;&gt;http://jacobsalmela.com/raspberry-pi-webcam-using-mjpg-streamer-over-internet/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi&quot;&gt;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;my usb webcam has following output&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;v4l2-ctl --list-formats
pi@pi50 ~ $ v4l2-ctl --list-formats
ioctl: VIDIOC_ENUM_FMT
    Index       : 0
    Type        : Video Capture
    Pixel Format: &amp;#39;YUYV&amp;#39;
    Name        : YUYV&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;v4l2-ctl --list-ctrls
pi@pi50 ~ $ v4l2-ctl --list-ctrls&lt;/p&gt;

&lt;p&gt;User Controls&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;                 brightness (int)    : min=0 max=255 step=1 default=0 value=0 flags=slider
                   contrast (int)    : min=0 max=255 step=1 default=32 value=32 flags=slider
                 saturation (int)    : min=0 max=255 step=1 default=64 value=64 flags=slider
                        hue (int)    : min=-90 max=90 step=1 default=0 value=0 flags=slider
    white_balance_automatic (bool)   : default=1 value=1
                   exposure (int)    : min=0 max=255 step=1 default=120 value=120 flags=inactive, volatile
             gain_automatic (bool)   : default=1 value=1 flags=update
                       gain (int)    : min=0 max=63 step=1 default=20 value=20 flags=inactive, volatile
            horizontal_flip (bool)   : default=0 value=0
              vertical_flip (bool)   : default=0 value=0
       power_line_frequency (menu)   : min=0 max=1 default=0 value=0
                  sharpness (int)    : min=0 max=63 step=1 default=0 value=0 flags=slider
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Camera Controls&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;              auto_exposure (menu)   : min=0 max=1 default=0 value=0 flags=update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-mjpg_streamer --input &amp;quot;input_uvc.so --help&amp;quot;
    pi@pi50 ~ $ mjpg_streamer --input &amp;quot;input_uvc.so --help&amp;quot;
    MJPG Streamer Version: svn rev: Unversioned directory
     ---------------------------------------------------------------
     Help for input plugin..: UVC webcam grabber
     ---------------------------------------------------------------
     The following parameters can be passed to this plugin:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; [-d | --device ].......: video device to open (your camera)
 [-r | --resolution ]...: the resolution of the video device,
                          can be one of the following strings:
                          QSIF QCIF CGA QVGA CIF VGA 
                          SVGA XGA SXGA 
                          or a custom value like the following
                          example: 640x480
 [-f | --fps ]..........: frames per second
 [-y | --yuv ]..........: enable YUYV format and disable MJPEG mode
 [-q | --quality ]......: JPEG compression quality in percent 
                          (activates YUYV format, disables MJPEG)
 [-m | --minimum_size ].: drop frames smaller then this limit, useful
                          if the webcam produces small-sized garbage frames
                          may happen under low light conditions
 [-n | --no_dynctrl ]...: do not initalize dynctrls of Linux-UVC driver
 [-l | --led ]..........: switch the LED &amp;quot;on&amp;quot;, &amp;quot;off&amp;quot;, let it &amp;quot;blink&amp;quot; or leave
                          it up to the driver using the value &amp;quot;auto&amp;quot;
 ---------------------------------------------------------------

input_init() return value signals to exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;THIS WORKS FOR USB WEBCAM&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;/usr/local/bin/mjpg_streamer -i &amp;quot;/usr/local/lib/input_uvc.so -y&amp;quot; -o &amp;quot;/usr/local/lib/output_http.so -w /usr/local/www&amp;quot;

/usr/local/bin/mjpg_streamer -i &amp;quot;/usr/local/lib/input_uvc.so -y&amp;quot; -o &amp;quot;/usr/local/lib/output_http.so -w /usr/local/www&amp;quot;

/usr/local/bin/mjpg_streamer -i &amp;quot;/usr/local/lib/input_uvc.so -y&amp;quot; -o &amp;quot;/usr/local/lib/output_http.so -w /usr/local/www&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Raspberry Pi video controller</title>
   <link href="/post/2015/03/20/Rapsberry%20Pi%20Video%20Controller/"/>
   <updated>2015-03-20T18:01:06-04:00</updated>
   <id>/post/2015/03/20/Rapsberry Pi Video Controller</id>
   <content type="html">&lt;p&gt;This is a video server running on a raspberry Pi Linux computer. It is designed to monitor a video camera pointing at your animal.&lt;/p&gt;

&lt;p&gt;It allows you to:&lt;/p&gt;

&lt;p&gt;1 - Arm - Automatically record videos whenever you start acquisition in ScanImage&lt;br&gt;
2 - Record - Record a one time video&lt;br&gt;
3 - Stream - Stream the video to your web browser so you can see a live feed of your animal  &lt;/p&gt;

&lt;p&gt;It will only do one of these at a time. You cannot do any combination  of (1), (2) or (3) at the same time.&lt;/p&gt;

&lt;p&gt;Installation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you need to come find bob&lt;/li&gt;
&lt;li&gt;follow my instructions &lt;a href=&quot;http://cudmore.github.io/post/2015/03/15/Installing-mjpg-streamer-on-a-raspberry-pi/&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Running the server&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coming soon&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Connecting to the server&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Coming soon&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>mjpg-streamer on a Raspberry Pi</title>
   <link href="/post/2015/03/15/Installing-mjpg-streamer-on-a-raspberry-pi/"/>
   <updated>2015-03-15T18:01:06-04:00</updated>
   <id>/post/2015/03/15/Installing-mjpg-streamer-on-a-raspberry-pi</id>
   <content type="html">&lt;p&gt;This post covers downloading, installing and running mjp-streamer on a raspberry pi. There are two options for installation and streaming depending on if you stream from (1) a rapsberry pi camera module or (2) a USB camera.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sourcecode for mjpg-streamer&lt;br&gt;
&lt;a href=&quot;http://sourceforge.net/projects/mjpg-streamer/&quot;&gt;http://sourceforge.net/projects/mjpg-streamer/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tutorials  &lt;/p&gt;

&lt;p&gt;In what follows I am following this blog post ...&lt;br&gt;
&lt;a href=&quot;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi&quot;&gt;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This post is derived from previous link but explains how to install a USB webcam instead of raspberry pi camera module ...&lt;br&gt;
&lt;a href=&quot;http://jacobsalmela.com/raspberry-pi-webcam-using-mjpg-streamer-over-internet/&quot;&gt;http://jacobsalmela.com/raspberry-pi-webcam-using-mjpg-streamer-over-internet/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install mjpg streamer&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Preliminaries  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get update  
sudo apt-get upgrade  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install dependencies&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install libjpeg8-dev imagemagick libv4l-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;make symbolic link to changed library names. Thanks to Miguel Grinberg for &lt;a href=&quot;http://blog.miguelgrinberg.com/post/how-to-build-and-run-mjpg-streamer-on-the-raspberry-pi%5D&quot;&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ln -s /usr/include/linux/videodev2.h /usr/include/linux/videodev.h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;download mjpg-streamer&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http://sourceforge.net/code-snapshots/svn/m/mj/mjpg-streamer/code/mjpg-streamer-code-182.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unzip&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;unzip mjpg-streamer-code-182.zip  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Here is where the installation differs depending on if you are installing (1) a usb camera or (2) the raspberry pi camera module&lt;/h4&gt;

&lt;h3&gt;(1) Raspberry Pi camera module&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;build and install for raspberry pi camera module.  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#build with &amp;#39;make&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mjpg-streamer-code-182/mjpg-streamer  
make mjpg_streamer input_file.so output_http.so  
&lt;span class=&quot;c&quot;&gt;#install by copying files&lt;/span&gt;
sudo cp mjpg_streamer /usr/local/bin  
sudo cp output_http.so input_file.so /usr/local/lib/  
sudo cp -R www /usr/local/www      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FOR COMPARISON, HERE IS SAME FOR USB CAMERA. IMPORTANT THING HERE IS &amp;#39;&lt;strong&gt;input_uvc.so&lt;/strong&gt;&amp;#39;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#build with &amp;#39;make&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mjpg-streamer
make mjpg_streamer input_file.so input_uvc.so output_http.so
&lt;span class=&quot;c&quot;&gt;#install by copying&lt;/span&gt;
sudo cp mjpg_streamer /usr/local/bin
sudo cp output_http.so input_file.so input_uvc.so /usr/local/lib/
sudo cp -R www /usr/local/www
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I GUESS YOU COULD JUST FOLLOW &amp;#39;USB CAMERA&amp;#39; AND IT WOULD WORK FOR BOTH&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;start the raspberry pi camera module&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir /tmp/stream  
raspistill --nopreview -w &lt;span class=&quot;m&quot;&gt;640&lt;/span&gt; -h &lt;span class=&quot;m&quot;&gt;480&lt;/span&gt; -q &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; -o /tmp/stream/pic.jpg -tl &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt; -t &lt;span class=&quot;m&quot;&gt;9999999&lt;/span&gt; -th 0:0:0 &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;start mjpg-streamer for raspberry pi camera module. This streams using &amp;#39;&lt;strong&gt;input_file.so&lt;/strong&gt;&amp;#39;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/lib  
mjpg_streamer -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;input_file.so -f /tmp/stream -n pic.jpg&amp;quot;&lt;/span&gt; -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;output_http.so -w /usr/local/www&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;(2) build for usb camera&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Plug in usb camera and verify it is automatically identified using &amp;#39;lsusb&amp;#39;. If it is not you need to get a different camera or go down the rabbit-hole of installing linux drivers (beyond the scope of this post).  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pi@pi50 ~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;lsusb  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 002: ID 0424:9512 Standard Microsystems Corp.  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 003: ID 0424:ec00 Standard Microsystems Corp.  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 004: ID 1a40:0201 Terminus Technology Inc. FE 2.1 7-port Hub  
Bus &lt;span class=&quot;m&quot;&gt;001&lt;/span&gt; Device 005: ID 1415:2000 Nam Tai E&lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt;E Products Ltd. or OmniVision Technologies, Inc. Sony Playstation Eye  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last entry is my camera, a &amp;#39;Sony Playstation Eye&amp;#39;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;install v4l-utils (THESE ARE WRONG !!!!!!!!!!!!!!!!)&lt;/p&gt;

&lt;p&gt;Getting v4l2 on the raspberry is witchcraft, as of march 2015 it seems to be installed by default???&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get install v4l2-utils
sudo apt-get install uv4l2 uv4l2-raspicam&lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the parameters of our USB camera  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;v4l2-ctl --list-formats  

ioctl: VIDIOC_ENUM_FMT  
    Index       : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;  
    Type        : Video Capture  
    Pixel Format: &lt;span class=&quot;s1&quot;&gt;&amp;#39;YUYV&amp;#39;&lt;/span&gt;  
    Name        : YUYV  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The YUYV is very important, I need to pass a -y option to jpg_streamer --input command. If you see MPEG you don&amp;#39;t need this -y switch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here are some other commands to learn about calling conventions. This one told me who to pass -y for YUYV to. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mjpg_streamer --input &lt;span class=&quot;s2&quot;&gt;&amp;quot;input_uvc.so --help&amp;quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# note, i am not showing the output here&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# important line in output is this:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#  [-y | --yuv ]..........: enable YUYV format and disable MJPEG mode&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;build and install for usb camera. Critical thing here is &amp;#39;&lt;strong&gt;input_uvc.so&lt;/strong&gt;&amp;#39;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#build with &amp;#39;make&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mjpg-streamer
make mjpg_streamer input_file.so input_uvc.so output_http.so
&lt;span class=&quot;c&quot;&gt;#install by copying&lt;/span&gt;
sudo cp mjpg_streamer /usr/local/bin
sudo cp output_http.so input_file.so input_uvc.so /usr/local/lib/
sudo cp -R www /usr/local/www
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;run mjpg-streamer to stream from usb camera&lt;/p&gt;

&lt;p&gt;My usb camera uses YUYV, thus the &amp;#39;-y&amp;#39;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/usr/local/bin/mjpg_streamer -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/input_uvc.so -y&amp;quot;&lt;/span&gt; -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/output_http.so -w /usr/local/www&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If my camera used MJPEG instead of YUYV, the command is the same without the &amp;#39;-y&amp;#39;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/usr/local/bin/mjpg_streamer -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/input_uvc.so&amp;quot;&lt;/span&gt; -o &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/output_http.so -w /usr/local/www&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Use OpenCV to acquire video</title>
   <link href="/post/2015/03/07/use-opencv-to-acquire-video/"/>
   <updated>2015-03-07T17:01:06-05:00</updated>
   <id>/post/2015/03/07/use-opencv-to-acquire-video</id>
   <content type="html">&lt;h4&gt;Goals&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use raspberry to record video from USB camera and stream to disk.&lt;/li&gt;
&lt;li&gt;Use python and opencv&lt;/li&gt;
&lt;li&gt;will save either as a sequence of .tif or as an uncompressed videofile&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Install opencv&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get update&lt;br&gt;
sudo apt-get upgrade&lt;br&gt;
sudo apt-get install libopencv-dev python-opencv&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Remember that I have conda install of python in &amp;#39;/home/pi/miniconda/bin/python&amp;#39;.&lt;/li&gt;
&lt;li&gt;I need to use &amp;#39;/usr/bin/python&amp;#39; instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Check opencv install&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ /usr/bin/python  
Python 2.7.3 (default, Mar 18 2014, 05:13:23) 
[GCC 4.6.3] on linux2  
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.  
&amp;gt;&amp;gt;&amp;gt; import cv2  
&amp;gt;&amp;gt;&amp;gt; cv2.__version__  
&amp;#39;2.4.1&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Install USB thumb drive + usb camera&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;after pluggin in usb drive + usb camera&lt;/p&gt;

&lt;p&gt;pi@pi40 ~ $ lsusb&lt;br&gt;
Bus 001 Device 002: ID 0424:9512 Standard Microsystems Corp. 
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub&lt;br&gt;
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. 
Bus 001 Device 005: ID 1415:2000 Nam Tai E&amp;amp;E Products Ltd. or OmniVision Technologies, Inc. Sony Playstation Eye&lt;br&gt;
Bus 001 Device 004: ID 13fe:4100 Kingston Technology Company Inc.  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Got some python/opencv code to acquire&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Acquires individual .tif files in a loop&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;To do&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Check the frame rate by recording a clock&lt;/li&gt;
&lt;li&gt;Add in template code for stop/start, start with keyboard and then move to GPIO&lt;/li&gt;
&lt;li&gt;Get the DC60 STK1160 video to usb dongle working&lt;/li&gt;
&lt;li&gt;This website says that it may just auto detect in newer linux kernels?
&lt;a href=&quot;http://linuxtv.org/wiki/index.php/Stk1160#Making_it_Work&quot;&gt;http://linuxtv.org/wiki/index.php/Stk1160#Making_it_Work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Here is the code&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#/usr/bin/python

import numpy as np
import cv2

#initialize camera
cap = cv2.VideoCapture(0)
if cap is None:
    print &amp;#39;Warning: unable to access camera&amp;#39;

#stopPin = 7 # listen for a change on this pin to stop

# number of frames to acquire
numFrames = 30
currFrame = 0

#outfilebase = &amp;#39;images/image&amp;#39; #append number + .tif

print &amp;#39;starting capture of &amp;#39; + str(numFrames) + &amp;#39; frames.&amp;#39;
print &amp;#39;press ctrl-c to stop ... eventually we will stop on a TTL&amp;#39;
while(cap.isOpened()):
    try:
        ret, frame = cap.read()
        if ret==True:
            #flip frame
            #frame = cv2.flip(frame,0)

            #print frame.shape

            # write the flipped frame
            try:
                #out.write(frame)
                #cv2.SaveImage(&amp;#39;file&amp;#39; + str(currFrame) + &amp;#39;.tif&amp;#39;, frame)
                cv2.imwrite(&amp;#39;images/image&amp;#39; + str(currFrame) + &amp;#39;.tif&amp;#39;, frame)
            except:
                print &amp;#39;Error in out.write() OR user hit ctrl-c&amp;#39;
                break

            currFrame += 1
            #if (currFrame &amp;gt; numFrames):
            #    print &amp;#39;finished &amp;#39; + str(numFrames) + &amp;#39; frames.&amp;#39;
            #    break

        else:
            break

    except KeyboardInterrupt:
        print &amp;#39;user hit ctrl-c&amp;#39;
        print &amp;#39;frames=&amp;#39; + str(currFrame)
        break

# Release camera
cap.release()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Plotting with bokeh on the Raspberry Pi</title>
   <link href="/post/2015/03/05/bokeh-on-the-raspberry-pi/"/>
   <updated>2015-03-05T17:01:06-05:00</updated>
   <id>/post/2015/03/05/bokeh-on-the-raspberry-pi</id>
   <content type="html">&lt;p&gt;Goal is to get plotting with bokeh on the Raspberry Pi.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install continuum anaconda python distribution&lt;/li&gt;
&lt;li&gt;Install bokeh plotting and get a plot server running&lt;/li&gt;
&lt;li&gt;be able to run bokeh examples&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install miniconda&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ wget http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-armv6l.sh
pi@pi40 ~ $ bash Miniconda-3.5.5-Linux-armv6l.sh 

Miniconda will now be installed into this location:
/home/pi/miniconda

  - Press ENTER to confirm the location
  - Press CTRL-C to abort the installation
  - Or specify an different location below

[/home/pi/miniconda] &amp;gt;&amp;gt;&amp;gt; 
PREFIX=/home/pi/miniconda
installing: python-2.7.7-0 ...
installing: openssl-1.0.1h-0 ...
installing: pycosat-0.6.1-py27_0 ...
installing: pyyaml-3.11-py27_0 ...
installing: requests-2.3.0-py27_0 ...
installing: yaml-0.1.4-0 ...
installing: conda-3.5.5-py27_0 ...
Python 2.7.7 :: Continuum Analytics, Inc.
creating default environment...
installation finished.
Do you wish the installer to prepend the Miniconda install location
to PATH in your /home/pi/.bashrc ? [yes|no]
[no] &amp;gt;&amp;gt;&amp;gt; yes

Prepending PATH=/home/pi/miniconda/bin to PATH in /home/pi/.bashrc
A backup will be made to: /home/pi/.bashrc-miniconda.bak


For this change to become active, you have to open a new terminal.

Thank you for installing Miniconda!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Make sure numpy and pandas is correct&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install numpy --upgrade&lt;br&gt;
pip install pandas --upgrade  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Install bokeh&lt;/h3&gt;

&lt;p&gt;In general &amp;#39;conda install bokeh&amp;#39; does not work on Pi, bokeh is not in repo?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install bokeh  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a list of required packages, see &lt;a href=&quot;http://bokeh.pydata.org/en/latest/tutorial/quick_install.html&quot;&gt;http://bokeh.pydata.org/en/latest/tutorial/quick_install.html&lt;/a&gt;  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;from: http://bokeh.pydata.org/en/latest/tutorial/quick_install.html
Ideally, you should have the following libraries installed:

NumPy
Flask
Redis
Requests
gevent
gevent-websocket
Pandas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Currently installed with pip&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ pip freeze
Flask==0.10.1
Flask-Markdown==0.3
Flask-Misaka==0.3.0
Flask-SocketIO==0.5.0
Jinja2==2.7.3
Markdown==2.6
MarkupSafe==0.23
PyYAML==3.11
Pygments==2.0.2
RPi.GPIO==0.5.11
Werkzeug==0.10.1
backports.ssl-match-hostname==3.4.0.2
bokeh==0.8.1
colorama==0.3.3
conda==3.5.5
gevent==1.0.1
gevent-socketio==0.3.6
gevent-websocket==0.9.3
greenlet==0.4.5
ipython==2.1.0
itsdangerous==0.24
misaka==1.0.2
nose==1.3.0
numpy==1.9.2
pandas==0.15.2
psutil==2.2.1
pycosat==0.6.1
pystache==0.5.4
python-dateutil==2.4.1
pytz==2014.10
pyzmq==14.5.0
requests==2.3.0
six==1.9.0
tornado==4.1
websocket==0.2.1
wsgiref==0.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Grab some example plots from bokeh github&lt;/h3&gt;

&lt;p&gt;The bokeh example plots are at:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bokeh/bokeh/tree/master/examples/plotting/server&quot;&gt;https://github.com/bokeh/bokeh/tree/master/examples/plotting/server&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Run the bokeh-server&lt;/h3&gt;

&lt;p&gt;Remember, this make temporary files in directory you run it in.&lt;/p&gt;

&lt;p&gt;--ip 0.0.0.0 will redirect the server to your external IP, in my case &lt;a href=&quot;http://192.168.1.40:5006&quot;&gt;http://192.168.1.40:5006&lt;/a&gt;  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;bokeh-server --backend=memory --ip 0.0.0.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~/bokeh_examples $ bokeh-server --backend=memory --ip 0.0.0.0
No module named scipy

    Bokeh Server Configuration
    ==========================
    python version : 2.7.8
    bokeh version  : 0.8.1
    listening      : 0.0.0.0:5006
    backend        : memory
    python options : debug:OFF, verbose:OFF, filter-logs:OFF, multi-user:OFF
    js options     : splitjs:OFF, debugjs:OFF

/home/pi/miniconda/lib/python2.7/site-packages/bokeh/server/blaze/__init__.py:19: UserWarning: could not import multiuser blaze server No module named blaze.  This is fine if you do not intend to use blaze capabilities in the bokeh server
  warnings.warn(msg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Example plots I have working&lt;/h3&gt;

&lt;p&gt;line_animate.py&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# The plot server must be running
# Go to http://localhost:5006/bokeh to view this plot

import time

import numpy as np

from bokeh.plotting import *

N = 80

x = np.linspace(0, 4*np.pi, N)
y = np.sin(x)

output_server(&amp;quot;line_animate&amp;quot;)

p = figure()

p.line(x, y, color=&amp;quot;#3333ee&amp;quot;, name=&amp;quot;sin&amp;quot;)
p.line([0,4*np.pi], [-1, 1], color=&amp;quot;#ee3333&amp;quot;)

show(p)

renderer = p.select(dict(name=&amp;quot;sin&amp;quot;))
ds = renderer[0].data_source

while True:
    for i in np.hstack((np.linspace(1, -1, 100), np.linspace(-1, 1, 100))):
        ds.data[&amp;quot;y&amp;quot;] = y * i
        cursession().store_objects(ds)
        time.sleep(0.05)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Now use Flask + bokeh to generate a single html page (no bokeh-server)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;eventual goal here is to have Flask server inject new data (via socketio) into html page with bokeh plot by modifying x/y data with javascript (on the client)&lt;/li&gt;
&lt;li&gt;simple example that works: &lt;a href=&quot;https://github.com/bokeh/bokeh/tree/master/examples/embed/simple&quot;&gt;https://github.com/bokeh/bokeh/tree/master/examples/embed/simple&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;more complex: &lt;a href=&quot;https://github.com/bokeh/bokeh/tree/master/examples/embed/spectrogram&quot;&gt;https://github.com/bokeh/bokeh/tree/master/examples/embed/spectrogram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bokeh.pydata.org/en/latest/index.html&quot;&gt;http://bokeh.pydata.org/en/latest/index.html&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.continuum.io/anaconda/install.html&quot;&gt;http://docs.continuum.io/anaconda/install.html&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Python calling bash to get drive space remaining</title>
   <link href="/2014/12/24/Python-calling-bash-to-get-drive-space-remaining/"/>
   <updated>2014-12-24T00:00:00-05:00</updated>
   <id>/2014/12/24/Python-calling-bash-to-get-drive-space-remaining</id>
   <content type="html">&lt;p&gt;I need to have some Python code tell me how much drive space is left. Here is what I came up with.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import subprocess as sub
&amp;gt;&amp;gt;&amp;gt; checkPath = &amp;#39;~/video&amp;#39;
&amp;gt;&amp;gt;&amp;gt; cmd = &amp;quot;df &amp;quot; + checkPath + &amp;quot; | awk &amp;#39;{ print $5 }&amp;#39; | tail -n 1&amp;quot;
&amp;gt;&amp;gt;&amp;gt; p = sub.Popen(cmd, stdout=sub.PIPE,stderr=sub.PIPE, shell=True)
&amp;gt;&amp;gt;&amp;gt; (out, err) = p.communicate()
&amp;gt;&amp;gt;&amp;gt; out
&amp;#39;31%\n&amp;#39;
&amp;gt;&amp;gt;&amp;gt; out.rstrip() #rstrip &amp;#39;chomps&amp;#39; off newline
&amp;#39;31%&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Monitoring mice in their home cage</title>
   <link href="/post/2014/02/14/Monitoring%20mice%20in%20their%20home%20cage/"/>
   <updated>2014-02-14T17:01:06-05:00</updated>
   <id>/post/2014/02/14/Monitoring mice in their home cage</id>
   <content type="html">&lt;p&gt;[Aug 4, 2014, updated]
[March 2015, moved to cudmore.github.io]&lt;/p&gt;

&lt;h2&gt;Goal&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;videotape mice in their home cage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Parts&lt;/h3&gt;

&lt;h4&gt;Computer&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Raspberry Pi, Model B 512MB RAM, &lt;a href=&quot;http://www.adafruit.com/products/998&quot;&gt;Adafruit 998&lt;/a&gt; target=&amp;quot;&lt;em&gt;blank&amp;quot;&amp;gt;Adafruit 998&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 GB SD Card, &lt;a href=&quot;http://www.adafruit.com/products/102&quot; target=&quot;_blank&quot;&gt;Adafruit 102&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;USB 2 Wifi Dongle (802.11b/g/n), &lt;a href=&quot;http://www.adafruit.com/products/814&quot; target=&quot;_blank&quot;&gt;Adafruit, 814&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;USB 2 Powered Hub, 5V 2A, &lt;a href=&quot;http://www.adafruit.com/products/961&quot; target=&quot;_blank&quot;&gt;Adafruit, 961&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;USB 2 hard-drive, Old laptop drive with a SATA to USB 2 connector&lt;/li&gt;
&lt;li&gt;5V 1A AC to DC converter, &lt;a href=&quot;http://www.adafruit.com/products/501&quot; target=&quot;_blank&quot;&gt;Adafruit, 501&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Video&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi NoIR camera, &lt;a href=&quot;http://www.adafruit.com/products/1567&quot; target=&quot;_blank&quot;&gt;Adafruit, 1567&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;12&amp;quot; flex cable for Raspberry Pi NoIR Camera, &lt;a href=&quot;http://www.adafruit.com/products/1648&quot; target=&quot;_blank&quot;&gt;Adafruit, 1648&lt;/a&gt; (24&amp;quot;, &lt;a href=&quot;https://www.adafruit.com/products/1731&quot; target=&quot;_blank&quot;&gt;Adafruit 1731&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;4x Right-angle 1/2&amp;quot; post clamps, &lt;a href=&quot;http://search.newport.com/?q=*&amp;amp;x2=sku&amp;amp;q2=CA-1&quot; target=&quot;_blank&quot;&gt;Newport CA-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mini Ball Head, &lt;a href=&quot;http://www.bhphotovideo.com/c/product/221096-REG/Giottos_MH1004_320_MH_1004_Mini_Ball.html&quot; target=&quot;_blank&quot;&gt;B&amp;amp;H Giottos MH1004&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1/2&amp;quot; hollow aluminum tubes, these are cheap and easily cut with hack-saw, &lt;a href=&quot;http://www.homedepot.com/p/Allied-Tube-Conduit-1-2-in-x-10-ft-Electric-Metallic-Tube-Conduit-101543/100400405&quot; target=&quot;_blank&quot;&gt;Home Depot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Lights&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;2x LED Driver, 12VDC 700 MA, &lt;a href=&quot;https://www.superbrightleds.com/moreinfo/led-drivers/700ma-constant-current-led-driver/1323/3045/&quot; target=&quot;_blank&quot;&gt;SuperBrightLeds, CCD-700&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4x LED PCB,  &amp;lt;a href=&amp;quot;&lt;a href=&quot;http://www.superbrightleds.com/moreinfo/bare-circuit-boards/universal-4-led-miniature-wedge-base-pcb-mled-pcb/403/1387/&quot;&gt;http://www.superbrightleds.com/moreinfo/bare-circuit-boards/universal-4-led-miniature-wedge-base-pcb-mled-pcb/403/1387/&lt;/a&gt;&amp;quot; target=&amp;quot;&lt;/em&gt;blank&amp;quot;&amp;gt;SuperBrightleds, MLED-PCB, 84778101387&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x Mosfet PCB, &lt;a href=&quot;https://www.sparkfun.com/products/10256&quot; target=&quot;_blank&quot;&gt;Sparkfun, COM-10256&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LED - Super Bright White (25 pack)&lt;/li&gt;
&lt;li&gt;LED - Infrared 850nm (25 pack), &lt;a href=&quot;https://www.sparkfun.com/products/9854&quot; target=&quot;_blank&quot;&gt;Sparkfun COM-09854&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LED - Infrared 950nm (25 pack), &lt;a href=&quot;https://www.sparkfun.com/products/10557&quot; target=&quot;_blank&quot;&gt;Sparkfun COM-10557&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2x LED Light Bar - White (SMD), &lt;a href=&quot;https://www.sparkfun.com/products/12014&quot; target=&quot;_blank&quot;&gt;Sparkfun, COM-12014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Light Holders,&lt;b&gt; &lt;/b&gt;25 lb circular magnets, 3 foot threaded rods, screws, washers (Ace Hardware)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Running Wheels&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Empty running wheels from &lt;a href=&quot;http://www.med-associates.com/product/low-profile-wireless-running-wheel-for-mouse/&quot; target=&quot;_blank&quot;&gt;Med Associates&lt;/a&gt; (find cheaper solution)&lt;/li&gt;
&lt;li&gt;2 Hall Effect sensors per wheel (Optek/TT O090U), &lt;a href=&quot;http://www.mouser.com/ProductDetail/Optek-TT-electronics/OH090U/?qs=MYMjFsmMg9Zxhz344sS0jg==&quot; target=&quot;_blank&quot;&gt;Mouser 828-OH090U&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Miscellaneous Sensors&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Visible light sensor (Vishay, TEPT5600), &lt;a href=&quot;http://www.mouser.com/ProductDetail/Vishay/TEPT5600/?qs=%2fha2pyFadujUHPassviAP51fh4B6FFdxq%2fQn0JoB63RFxPBe7%2ffCXA%3d%3d&quot; target=&quot;_blank&quot;&gt;Mouser 782-TEPT5600&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IR sensor (Vishay BPW83), &lt;a href=&quot;http://www.mouser.com/ProductDetail/Vishay/BPW83/?qs=%2fha2pyFaduiEcAuMy5rpt15ObB2haiIvhq3aASHM7R0%3d&quot; target=&quot;_blank&quot;&gt;Mouser 782-BPW83&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Temperature and Humidity Sensor (AM2302 wired DHT22), &lt;a href=&quot;http://www.adafruit.com/products/393&quot; target=&quot;_blank&quot;&gt;Adafruit 393&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Acquisition Software (&lt;/strong&gt;Python scripts running in Pi)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Script 1:
&lt;ul&gt;
    &lt;li&gt;Acquires sequential 5 minute videos and save each to a timestamped .h264 file.&lt;/li&gt;
&lt;/ul&gt;
Script 2:
&lt;ul&gt;
    &lt;li&gt;Turns IR and White lights on and off, uses time-of-day from Raspberry Linux.&lt;/li&gt;
    &lt;li&gt;Reads from IR and visible light sensors to check light levels and sends an email if either IR or white lights burn out.&lt;/li&gt;
    &lt;li&gt;Reads temperature and humidity.&lt;/li&gt;
    &lt;li&gt;Reads wheel turn events using low level GPIO callbacks to get more accurate time.&lt;/li&gt;
    &lt;li&gt;Logs all of this to text file locally on Raspberry.&lt;/li&gt;
    &lt;li&gt;Pushes all of this to online web server so I can check if the mice have been running. &lt;del&gt;Remote webserver has a PHP script to accept and save name/value pairs of data&lt;/del&gt;. Now using mySQL on external web server.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Software Analysis&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;Python/OpenCV motion detection using a modified version of &lt;a href=&quot;http://derek.simkowiak.net/motion-tracking-with-python/&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; (Thanks to Derek Simkowiak). Motion detection does not run on Pi, runs offline on desktop/laptop (OS X)&lt;/li&gt;
    &lt;li&gt;In future, write in C++/OpenCV using &lt;a href=&quot;http://sundararajana.blogspot.com/2007/05/motion-detection-using-opencv.html&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;&lt;a title=&quot;Setting up Python, OpenCV and ffmpeg in OSX&quot; href=&quot;http://www.robertcudmore.org/blog/?p=183&quot; target=&quot;_blank&quot;&gt;How to install Python/OpenCV/ffmpeg on OSX&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Another project to monitor a hamster in their cage, &lt;a href=&quot;http://www.raspberrypi.org/learning/hamster-party-cam/&quot;&gt;the hamster party-cam&lt;/a&gt; (from the Raspberry people).&lt;/li&gt;&lt;/p&gt;

&lt;h1&gt;&lt;/ul&gt;&lt;/h1&gt;

&lt;h3&gt;Wish List&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Sensors&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;del&gt;Temperature and Humidity sensor, &lt;a href=&quot;http://www.adafruit.com/products/393&quot; target=&quot;_blank&quot;&gt;Adafruit, 393&lt;/a&gt;, $15&lt;/del&gt;&lt;/li&gt;
    &lt;li&gt;&lt;del&gt;Upgrade temperature/humidity to something like, &lt;a href=&quot;http://www.adafruit.com/products/1293&quot; target=&quot;_blank&quot;&gt;Adafruit 1293&lt;/a&gt;, $30, no tutorials 2/14/14&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Camera Holder&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;del&gt;Right-angle 1/2&amp;quot; post clamps, &lt;a href=&quot;http://www.thorlabs.com/thorProduct.cfm?partNumber=RA90&quot; target=&quot;_blank&quot;&gt;Thor Labs, RA90&lt;/a&gt; (google image search for &amp;#39;Right Angle Clamp rod&amp;#39;). Will order Newport right-angle post clamp, Newport &lt;a href=&quot;http://search.newport.com/?q=*&amp;amp;x2=sku&amp;amp;q2=CA-1&quot; target=&quot;_blank&quot;&gt;CA-1&lt;/a&gt;. In general, it seems that any kind of post system with clamps, junctions, and T&amp;#39;s triples in price as soon as the post/rod diameter goes below 1/2&amp;quot;. Because I need many of these post clamps, 3-4 for camera and 3-4 for lights) I will stick with the 1/2&amp;quot; variety. My choice to go with Newport is based on &lt;a href=&quot;http://mousevr.blogspot.com/2011_09_01_archive.html&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; comment.&lt;/del&gt;&lt;/li&gt;
    &lt;li&gt;&lt;del&gt;1/2&amp;quot; aluminum OR wood tubes/dowels&lt;/del&gt;&lt;/li&gt;
    &lt;li&gt;&lt;del&gt;12&amp;quot; flex cable for Raspberry Pi NoIR Camera, &lt;a href=&quot;http://www.adafruit.com/products/1648&quot; target=&quot;_blank&quot;&gt;Adafruit, 1648&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;&lt;/p&gt;

&lt;h1&gt;&lt;/ul&gt;&lt;/h1&gt;

&lt;h3&gt;Notes&lt;/h3&gt;

&lt;p&gt;Temp/Humidity Sensor (DHT22) spits out readings once per second (fine) and does it fast (not fine). On Raspberry Pi this requires some C code to read &amp;#39;bit-banged&amp;#39; sensor output. See &lt;a href=&quot;http://learn.adafruit.com/dht-humidity-sensing-on-raspberry-pi-with-gdocs-logging&quot; target=&quot;_blank&quot;&gt;Adafruit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.adafruit.com/products/1293&quot; target=&quot;_blank&quot;&gt;AM2315&lt;/a&gt; is a more accurate temperature/humidity sensor, and data comes in via I2C. This particular sensor has a fixed address.&lt;/p&gt;

&lt;p&gt;The Pi NoIR camera is just the standard Pi camera with the IR filter removed. Right now there are no detailed specs on the nm sensitivity of the NoIR camera, the IR filter or the original camera for that matter. According to the &lt;a href=&quot;http://elinux.org/Rpi_Camera_Module&quot; target=&quot;_blank&quot;&gt;Embedded Linux Wiki&lt;/a&gt;, the Pi NoIR camera has a CMOS &lt;a href=&quot;http://www.ovt.com/products/sensor.php?id=66&quot; target=&quot;_blank&quot;&gt;Omnivision 5647 CMOS&lt;/a&gt; chip. Also see the pdf &lt;a href=&quot;http://www.ovt.com/download_document.php?type=sensor&amp;amp;sensorid=66&quot; target=&quot;_blank&quot;&gt;spec/ad sheet&lt;/a&gt;. &lt;a href=&quot;http://www.aphesa.com&quot; target=&quot;_blank&quot;&gt;Aphesa&lt;/a&gt; has some pretty in depth discussion of the &lt;a href=&quot;http://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=3&amp;amp;ved=0CDoQFjAC&amp;amp;url=http%3A%2F%2Fwww.aphesa.com%2Fdownloads%2Fdownload2.php%3Fid%3D1&amp;amp;ei=6DX-UryPKMXb0wGq4YHgBg&amp;amp;usg=AFQjCNG9S8Vix59mZKa5fYeZ-mvSw0ZaOQ&amp;amp;sig2=eRzJXiMlOerKKYQ4RmtkKA&amp;amp;bvm=bv.61190604,d.dmQ&quot; target=&quot;_blank&quot;&gt;spectral response properties of silicon image sensors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I tried 950nm LEDs and got a pretty grainy video, I switched to 850 nm LEDs and the image is brighter and less grainy (as expected). In both these cases, the camera is about 20&amp;quot; from subject and IR  lights are off to the left and right, 4 LEDs on the left and 4 LEDs on the right. See &lt;a href=&quot;http://www.raspberrypi.org/forum/viewtopic.php?f=43&amp;amp;t=60103&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; discussion and &lt;a href=&quot;http://www.raspberrypi.org/phpBB3/viewtopic.php?f=43&amp;amp;t=48787&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; for a guess at the spectral sensitivity.&lt;/p&gt;

&lt;del&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;-Try -night switch for video with IR LEDs.&lt;/span&gt;&lt;/del&gt;

&lt;p&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt;-&lt;/span&gt;&lt;a style=&quot;line-height: 1.714285714; font-size: 1rem;&quot; href=&quot;http://www.lukasz-skalski.com/category/software/&quot; target=&quot;_blank&quot;&gt;Raspberry Control&lt;/a&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt;, a general purpose Android based Raspberry Pi Controller.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt; Camera board has 2mm screw holes, see &lt;/span&gt;&lt;a style=&quot;line-height: 1.714285714; font-size: 1rem;&quot; href=&quot;http://www.scribd.com/doc/142718448/Raspberry-Pi-Camera-Mechanical-Data&quot; target=&quot;_blank&quot;&gt;Gert&amp;#39;s drawings&lt;/a&gt;&lt;span style=&quot;line-height: 1.714285714; font-size: 1rem;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</content>
 </entry>
 

</feed>
