<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Robert Cudmore</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2015-03-08T14:21:16-04:00</updated>
 <id></id>
 <author>
   <name>Robert Cudmore</name>
   <email></email>
 </author>

 
 <entry>
   <title>Use OpenCV to acquire video</title>
   <link href="/post/2015/03/07/use-opencv-to-acquire-video/"/>
   <updated>2015-03-07T17:01:06-05:00</updated>
   <id>/post/2015/03/07/use-opencv-to-acquire-video</id>
   <content type="html">&lt;h4&gt;Goals&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Use raspberry to record video from USB camera and stream to disk.&lt;/li&gt;
&lt;li&gt;Use python and opencv&lt;/li&gt;
&lt;li&gt;will save either as a sequence of .tif or as an uncompressed videofile&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Install opencv&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get update&lt;br&gt;
sudo apt-get upgrade&lt;br&gt;
sudo apt-get install libopencv-dev python-opencv&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Remember that I have conda install of python in &amp;#39;/home/pi/miniconda/bin/python&amp;#39;.&lt;/li&gt;
&lt;li&gt;I need to use &amp;#39;/usr/bin/python&amp;#39; instead.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Check opencv install&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ /usr/bin/python  
Python 2.7.3 (default, Mar 18 2014, 05:13:23) 
[GCC 4.6.3] on linux2  
Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.  
&amp;gt;&amp;gt;&amp;gt; import cv2  
&amp;gt;&amp;gt;&amp;gt; cv2.__version__  
&amp;#39;2.4.1&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Install USB thumb drive + usb camera&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;after pluggin in usb drive + usb camera&lt;/p&gt;

&lt;p&gt;pi@pi40 ~ $ lsusb&lt;br&gt;
Bus 001 Device 002: ID 0424:9512 Standard Microsystems Corp. 
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub&lt;br&gt;
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. 
Bus 001 Device 005: ID 1415:2000 Nam Tai E&amp;amp;E Products Ltd. or OmniVision Technologies, Inc. Sony Playstation Eye&lt;br&gt;
Bus 001 Device 004: ID 13fe:4100 Kingston Technology Company Inc.  &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Got some python/opencv code to acquire&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Acquires individual .tif files in a loop&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;To do&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Check the frame rate by recording a clock&lt;/li&gt;
&lt;li&gt;Add in template code for stop/start, start with keyboard and then move to GPIO&lt;/li&gt;
&lt;li&gt;Get the DC60 STK1160 video to usb dongle working&lt;/li&gt;
&lt;li&gt;This website says that it may just auto detect in newer linux kernels?
http://linuxtv.org/wiki/index.php/Stk1160#Making&lt;em&gt;it&lt;/em&gt;Work&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Here is the code&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#/usr/bin/python

import numpy as np
import cv2

#initialize camera
cap = cv2.VideoCapture(0)
if cap is None:
    print &amp;#39;Warning: unable to access camera&amp;#39;

#stopPin = 7 # listen for a change on this pin to stop

# number of frames to acquire
numFrames = 30
currFrame = 0

#outfilebase = &amp;#39;images/image&amp;#39; #append number + .tif

print &amp;#39;starting capture of &amp;#39; + str(numFrames) + &amp;#39; frames.&amp;#39;
print &amp;#39;press ctrl-c to stop ... eventually we will stop on a TTL&amp;#39;
while(cap.isOpened()):
    try:
        ret, frame = cap.read()
        if ret==True:
            #flip frame
            #frame = cv2.flip(frame,0)

            #print frame.shape

            # write the flipped frame
            try:
                #out.write(frame)
                #cv2.SaveImage(&amp;#39;file&amp;#39; + str(currFrame) + &amp;#39;.tif&amp;#39;, frame)
                cv2.imwrite(&amp;#39;images/image&amp;#39; + str(currFrame) + &amp;#39;.tif&amp;#39;, frame)
            except:
                print &amp;#39;Error in out.write() OR user hit ctrl-c&amp;#39;
                break

            currFrame += 1
            #if (currFrame &amp;gt; numFrames):
            #    print &amp;#39;finished &amp;#39; + str(numFrames) + &amp;#39; frames.&amp;#39;
            #    break

        else:
            break

    except KeyboardInterrupt:
        print &amp;#39;user hit ctrl-c&amp;#39;
        print &amp;#39;frames=&amp;#39; + str(currFrame)
        break

# Release camera
cap.release()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Plotting with bokeh on the Raspberry Pi</title>
   <link href="/post/2015/03/05/bokeh-on-the-raspberry-pi/"/>
   <updated>2015-03-05T17:01:06-05:00</updated>
   <id>/post/2015/03/05/bokeh-on-the-raspberry-pi</id>
   <content type="html">&lt;h3&gt;To get bokeh plotting on the Raspberry Pi&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install continuum anaconda python distribution&lt;/li&gt;
&lt;li&gt;Install bokeh plotting and get a plot server running&lt;/li&gt;
&lt;li&gt;be able to run bokeh examples&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install miniconda&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ wget http://repo.continuum.io/miniconda/Miniconda-3.5.5-Linux-armv6l.sh
pi@pi40 ~ $ bash Miniconda-3.5.5-Linux-armv6l.sh 

Miniconda will now be installed into this location:
/home/pi/miniconda

  - Press ENTER to confirm the location
  - Press CTRL-C to abort the installation
  - Or specify an different location below

[/home/pi/miniconda] &amp;gt;&amp;gt;&amp;gt; 
PREFIX=/home/pi/miniconda
installing: python-2.7.7-0 ...
installing: openssl-1.0.1h-0 ...
installing: pycosat-0.6.1-py27_0 ...
installing: pyyaml-3.11-py27_0 ...
installing: requests-2.3.0-py27_0 ...
installing: yaml-0.1.4-0 ...
installing: conda-3.5.5-py27_0 ...
Python 2.7.7 :: Continuum Analytics, Inc.
creating default environment...
installation finished.
Do you wish the installer to prepend the Miniconda install location
to PATH in your /home/pi/.bashrc ? [yes|no]
[no] &amp;gt;&amp;gt;&amp;gt; yes

Prepending PATH=/home/pi/miniconda/bin to PATH in /home/pi/.bashrc
A backup will be made to: /home/pi/.bashrc-miniconda.bak


For this change to become active, you have to open a new terminal.

Thank you for installing Miniconda!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Make sure numpy and pandas is correct&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install numpy --upgrade&lt;br&gt;
pip install pandas --upgrade  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Install bokeh&lt;/h3&gt;

&lt;p&gt;In general &amp;#39;conda install bokeh&amp;#39; does not work on Pi, bokeh is not in repo?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;pip install bokeh  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For a list of required packages, see http://bokeh.pydata.org/en/latest/tutorial/quick_install.html  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;from: http://bokeh.pydata.org/en/latest/tutorial/quick_install.html
Ideally, you should have the following libraries installed:

NumPy
Flask
Redis
Requests
gevent
gevent-websocket
Pandas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Currently installed with pip&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~ $ pip freeze
Flask==0.10.1
Flask-Markdown==0.3
Flask-Misaka==0.3.0
Flask-SocketIO==0.5.0
Jinja2==2.7.3
Markdown==2.6
MarkupSafe==0.23
PyYAML==3.11
Pygments==2.0.2
RPi.GPIO==0.5.11
Werkzeug==0.10.1
backports.ssl-match-hostname==3.4.0.2
bokeh==0.8.1
colorama==0.3.3
conda==3.5.5
gevent==1.0.1
gevent-socketio==0.3.6
gevent-websocket==0.9.3
greenlet==0.4.5
ipython==2.1.0
itsdangerous==0.24
misaka==1.0.2
nose==1.3.0
numpy==1.9.2
pandas==0.15.2
psutil==2.2.1
pycosat==0.6.1
pystache==0.5.4
python-dateutil==2.4.1
pytz==2014.10
pyzmq==14.5.0
requests==2.3.0
six==1.9.0
tornado==4.1
websocket==0.2.1
wsgiref==0.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Grab some example plots from bokeh github&lt;/h3&gt;

&lt;p&gt;The bokeh example plots are at:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;https://github.com/bokeh/bokeh/tree/master/examples/plotting/server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Run the bokeh-server&lt;/h3&gt;

&lt;p&gt;Remember, this make temporary files in directory you run it in.&lt;/p&gt;

&lt;p&gt;--ip 0.0.0.0 will redirect the server to your external IP, in my case http://192.168.1.40:5006  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;bokeh-server --backend=memory --ip 0.0.0.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;pi@pi40 ~/bokeh_examples $ bokeh-server --backend=memory --ip 0.0.0.0
No module named scipy

    Bokeh Server Configuration
    ==========================
    python version : 2.7.8
    bokeh version  : 0.8.1
    listening      : 0.0.0.0:5006
    backend        : memory
    python options : debug:OFF, verbose:OFF, filter-logs:OFF, multi-user:OFF
    js options     : splitjs:OFF, debugjs:OFF

/home/pi/miniconda/lib/python2.7/site-packages/bokeh/server/blaze/__init__.py:19: UserWarning: could not import multiuser blaze server No module named blaze.  This is fine if you do not intend to use blaze capabilities in the bokeh server
  warnings.warn(msg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Example plots I have working&lt;/h3&gt;

&lt;p&gt;line_animate.py&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# The plot server must be running
# Go to http://localhost:5006/bokeh to view this plot

import time

import numpy as np

from bokeh.plotting import *

N = 80

x = np.linspace(0, 4*np.pi, N)
y = np.sin(x)

output_server(&amp;quot;line_animate&amp;quot;)

p = figure()

p.line(x, y, color=&amp;quot;#3333ee&amp;quot;, name=&amp;quot;sin&amp;quot;)
p.line([0,4*np.pi], [-1, 1], color=&amp;quot;#ee3333&amp;quot;)

show(p)

renderer = p.select(dict(name=&amp;quot;sin&amp;quot;))
ds = renderer[0].data_source

while True:
    for i in np.hstack((np.linspace(1, -1, 100), np.linspace(-1, 1, 100))):
        ds.data[&amp;quot;y&amp;quot;] = y * i
        cursession().store_objects(ds)
        time.sleep(0.05)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Now use Flask + bokeh to generate a single html page (no bokeh-server)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;eventual goal here is to have Flask server inject new data (via socketio) into html page with bokeh plot by modifying x/y data with javascript (on the client)&lt;/li&gt;
&lt;li&gt;simple example that works: https://github.com/bokeh/bokeh/tree/master/examples/embed/simple&lt;br&gt;&lt;/li&gt;
&lt;li&gt;more complex: https://github.com/bokeh/bokeh/tree/master/examples/embed/spectrogram&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;http://bokeh.pydata.org/en/latest/index.html&lt;br&gt;&lt;/li&gt;
&lt;li&gt;http://docs.continuum.io/anaconda/install.html&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>My post 2</title>
   <link href="/2015/02/15/my-post-2/"/>
   <updated>2015-02-15T00:00:00-05:00</updated>
   <id>/2015/02/15/my-post-2</id>
   <content type="html">&lt;h4&gt;heading 4 ... This is my first blog post in Jekyll&lt;/h4&gt;

&lt;p&gt;xxx and yyy is a paragraph.&lt;/p&gt;

&lt;h5&gt;heading 5&lt;/h5&gt;

&lt;p&gt;another paragraphs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;list item 1&lt;br&gt;&lt;/li&gt;
&lt;li&gt;list item 2&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>First post in Jekyll</title>
   <link href="/2015/02/14/First-post-in-Jekyll/"/>
   <updated>2015-02-14T00:00:00-05:00</updated>
   <id>/2015/02/14/First-post-in-Jekyll</id>
   <content type="html">&lt;h4&gt;This is my first blog post in Jekyll&lt;/h4&gt;

&lt;p&gt;Grab layout from  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;http://mikerowecode.com&lt;/p&gt;

&lt;p&gt;https://github.com/mrowe/mrowe.github.com&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Python calling bash to get drive space remaining</title>
   <link href="/2014/12/24/Python-calling-bash-to-get-drive-space-remaining/"/>
   <updated>2014-12-24T00:00:00-05:00</updated>
   <id>/2014/12/24/Python-calling-bash-to-get-drive-space-remaining</id>
   <content type="html">&lt;p&gt;I need to have some Python code tell me how much drive space is left. Here is what I came up with.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import subprocess as sub
&amp;gt;&amp;gt;&amp;gt; checkPath = &amp;#39;~/video&amp;#39;
&amp;gt;&amp;gt;&amp;gt; cmd = &amp;quot;df &amp;quot; + checkPath + &amp;quot; | awk &amp;#39;{ print $5 }&amp;#39; | tail -n 1&amp;quot;
&amp;gt;&amp;gt;&amp;gt; p = sub.Popen(cmd, stdout=sub.PIPE,stderr=sub.PIPE, shell=True)
&amp;gt;&amp;gt;&amp;gt; (out, err) = p.communicate()
&amp;gt;&amp;gt;&amp;gt; out
&amp;#39;31%\n&amp;#39;
&amp;gt;&amp;gt;&amp;gt; out.rstrip() #rstrip &amp;#39;chomps&amp;#39; off newline
&amp;#39;31%&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Introducing Hyde</title>
   <link href="/2013/12/28/introducing-hyde/"/>
   <updated>2013-12-28T00:00:00-05:00</updated>
   <id>/2013/12/28/introducing-hyde</id>
   <content type="html">&lt;p&gt;Hyde is a brazen two-column &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; theme that pairs a prominent sidebar with uncomplicated content. It&amp;#39;s based on &lt;a href=&quot;http://getpoole.com&quot;&gt;Poole&lt;/a&gt;, the Jekyll butler.&lt;/p&gt;

&lt;h3&gt;Built on Poole&lt;/h3&gt;

&lt;p&gt;Poole is the Jekyll Butler, serving as an upstanding and effective foundation for Jekyll themes by &lt;a href=&quot;https://twitter.com/mdo&quot;&gt;@mdo&lt;/a&gt;. Poole, and every theme built on it (like Hyde here) includes the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Complete Jekyll setup included (layouts, config, &lt;a href=&quot;/404&quot;&gt;404&lt;/a&gt;, &lt;a href=&quot;/atom.xml&quot;&gt;RSS feed&lt;/a&gt;, posts, and &lt;a href=&quot;/about&quot;&gt;example page&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Mobile friendly design and development&lt;/li&gt;
&lt;li&gt;Easily scalable text and component sizing with &lt;code&gt;rem&lt;/code&gt; units in the CSS&lt;/li&gt;
&lt;li&gt;Support for a wide gamut of HTML elements&lt;/li&gt;
&lt;li&gt;Related posts (time-based, because Jekyll) below each post&lt;/li&gt;
&lt;li&gt;Syntax highlighting, courtesy Pygments (the Python-based code snippet highlighter)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Hyde features&lt;/h3&gt;

&lt;p&gt;In addition to the features of Poole, Hyde adds the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sidebar includes support for textual modules and a dynamically generated navigation with active link support&lt;/li&gt;
&lt;li&gt;Two orientations for content and sidebar, default (left sidebar) and &lt;a href=&quot;https://github.com/poole/lanyon#reverse-layout&quot;&gt;reverse&lt;/a&gt; (right sidebar), available via &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/poole/hyde#themes&quot;&gt;Eight optional color schemes&lt;/a&gt;, available via &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/poole/hyde#readme&quot;&gt;Head to the readme&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;h3&gt;Browser support&lt;/h3&gt;

&lt;p&gt;Hyde is by preference a forward-thinking project. In addition to the latest versions of Chrome, Safari (mobile and desktop), and Firefox, it is only compatible with Internet Explorer 9 and above.&lt;/p&gt;

&lt;h3&gt;Download&lt;/h3&gt;

&lt;p&gt;Hyde is developed on and hosted with GitHub. Head to the &lt;a href=&quot;https://github.com/poole/hyde&quot;&gt;GitHub repository&lt;/a&gt; for downloads, bug reports, and features requests.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="/2012/02/07/example-content/"/>
   <updated>2012-02-07T00:00:00-05:00</updated>
   <id>/2012/02/07/example-content</id>
   <content type="html">&lt;div class=&quot;message&quot;&gt;
  Howdy! This is an example blog post that shows several types of HTML content supported in this theme.
&lt;/div&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;strong&gt;sem malesuada magna&lt;/strong&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h2&gt;Inline HTML elements&lt;/h2&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
&lt;li&gt;Citations, like &lt;cite&gt;&amp;mdash; Mark otto&lt;/cite&gt;, should use &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create a function that takes two arguments and returns the sum of those arguments&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;return a + b&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call the function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;gt; 8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3&gt;Gists via GitHub Pages&lt;/h3&gt;

&lt;p&gt;Vestibulum id ligula porta felis euismod semper. Nullam quis risus eget urna mollis ornare vel eu leo. Donec sed odio dui.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/5555251.js?file=gist.md&quot;&gt; &lt;/script&gt;

&lt;p&gt;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec sed odio dui. Vestibulum id ligula porta felis euismod semper.&lt;/p&gt;

&lt;h3&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
&lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
&lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
&lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
&lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3&gt;Images&lt;/h3&gt;

&lt;p&gt;Quisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://placehold.it/800x400&quot; alt=&quot;placeholder&quot; title=&quot;Large example image&quot;&gt;
&lt;img src=&quot;http://placehold.it/400x200&quot; alt=&quot;placeholder&quot; title=&quot;Medium example image&quot;&gt;
&lt;img src=&quot;http://placehold.it/200x200&quot; alt=&quot;placeholder&quot; title=&quot;Small example image&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;Upvotes&lt;/th&gt;
      &lt;th&gt;Downvotes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Totals&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bob&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charlie&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Want to see something else added? &lt;a href=&quot;https://github.com/poole/poole/issues/new&quot;&gt;Open an issue.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's Jekyll?</title>
   <link href="/2012/02/06/whats-jekyll/"/>
   <updated>2012-02-06T00:00:00-05:00</updated>
   <id>/2012/02/06/whats-jekyll</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; is a static site generator, an open-source tool for creating simple yet powerful websites of all shapes and sizes. From &lt;a href=&quot;https://github.com/mojombo/jekyll/blob/master/README.markdown&quot;&gt;the project&amp;#39;s readme&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Jekyll is a simple, blog aware, static site generator. It takes a template directory [...] and spits out a complete, static website suitable for serving with Apache or your favorite web server. This is also the engine behind GitHub Pages, which you can use to host your project’s page or blog right here from GitHub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;#39;s an immensely useful tool and one we encourage you to use here with Hyde.&lt;/p&gt;

&lt;p&gt;Find out more by &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;visiting the project on GitHub&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 

</feed>
